/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game_view */ \"./src/scripts/game_view.js\");\n\nconst preloadedImages = [];\nconst imageUrls = [\"src/assets/images/boss1.png\", \"src/assets/images/enemy_projectile.png\", \"src/assets/images/enemy1.png\", \"src/assets/images/enemy2.png\", \"src/assets/images/enemy3.png\", \"src/assets/images/player_projectile.png\", \"src/assets/images/player1.png\", \"src/assets/images/game_background.png\", \"src/assets/images/explosion1.png\", \"src/assets/images/explosion2.png\"];\nimageUrls.forEach((url, i) => {\n  preloadedImages[i] = new Image();\n  preloadedImages[i].src = url;\n});\nwindow.addEventListener(\"load\", () => {\n  window.canvas = document.getElementById(\"game-view\");\n  window.ctx = canvas.getContext(\"2d\");\n  const view = new _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, ctx);\n  view.start();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMkM7QUFFM0MsTUFBTUMsZUFBZSxHQUFHLEVBQUU7QUFDMUIsTUFBTUMsU0FBUyxHQUFHLENBQ2hCLDZCQUE2QixFQUM3Qix3Q0FBd0MsRUFDeEMsOEJBQThCLEVBQzlCLDhCQUE4QixFQUM5Qiw4QkFBOEIsRUFDOUIseUNBQXlDLEVBQ3pDLCtCQUErQixFQUMvQix1Q0FBdUMsRUFDdkMsa0NBQWtDLEVBQ2xDLGtDQUFrQyxDQUNuQztBQUVEQSxTQUFTLENBQUNDLE9BQU8sQ0FBQyxDQUFDQyxHQUFHLEVBQUVDLENBQUMsS0FBSztFQUM1QkosZUFBZSxDQUFDSSxDQUFDLENBQUMsR0FBRyxJQUFJQyxLQUFLLEVBQUU7RUFDaENMLGVBQWUsQ0FBQ0ksQ0FBQyxDQUFDLENBQUNFLEdBQUcsR0FBR0gsR0FBRztBQUM5QixDQUFDLENBQUM7QUFFRkksTUFBTSxDQUFDQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsTUFBTTtFQUNwQ0QsTUFBTSxDQUFDRSxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLFdBQVcsQ0FBQztFQUNwREosTUFBTSxDQUFDSyxHQUFHLEdBQUdILE1BQU0sQ0FBQ0ksVUFBVSxDQUFDLElBQUksQ0FBQztFQUNwQyxNQUFNQyxJQUFJLEdBQUcsSUFBSWYsMERBQVEsQ0FBQ1UsTUFBTSxFQUFFRyxHQUFHLENBQUM7RUFDdENFLElBQUksQ0FBQ0MsS0FBSyxFQUFFO0FBQ2QsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVWaWV3IGZyb20gXCIuL3NjcmlwdHMvZ2FtZV92aWV3XCI7XG5cbmNvbnN0IHByZWxvYWRlZEltYWdlcyA9IFtdO1xuY29uc3QgaW1hZ2VVcmxzID0gW1xuICBcInNyYy9hc3NldHMvaW1hZ2VzL2Jvc3MxLnBuZ1wiLFxuICBcInNyYy9hc3NldHMvaW1hZ2VzL2VuZW15X3Byb2plY3RpbGUucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvZW5lbXkxLnBuZ1wiLFxuICBcInNyYy9hc3NldHMvaW1hZ2VzL2VuZW15Mi5wbmdcIixcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9lbmVteTMucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvcGxheWVyX3Byb2plY3RpbGUucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvcGxheWVyMS5wbmdcIixcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9nYW1lX2JhY2tncm91bmQucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvZXhwbG9zaW9uMS5wbmdcIixcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9leHBsb3Npb24yLnBuZ1wiXG5dXG5cbmltYWdlVXJscy5mb3JFYWNoKCh1cmwsIGkpID0+IHtcbiAgcHJlbG9hZGVkSW1hZ2VzW2ldID0gbmV3IEltYWdlKCk7XG4gIHByZWxvYWRlZEltYWdlc1tpXS5zcmMgPSB1cmw7XG59KVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4ge1xuICB3aW5kb3cuY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnYW1lLXZpZXdcIik7XG4gIHdpbmRvdy5jdHggPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuICBjb25zdCB2aWV3ID0gbmV3IEdhbWVWaWV3KGNhbnZhcywgY3R4KTtcbiAgdmlldy5zdGFydCgpXG59KTtcbiJdLCJuYW1lcyI6WyJHYW1lVmlldyIsInByZWxvYWRlZEltYWdlcyIsImltYWdlVXJscyIsImZvckVhY2giLCJ1cmwiLCJpIiwiSW1hZ2UiLCJzcmMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImN0eCIsImdldENvbnRleHQiLCJ2aWV3Iiwic3RhcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/boss.js":
/*!*****************************!*\
  !*** ./src/scripts/boss.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// The big bad boss, the final enemy in a level\n// Defeat the boss to win and save the galaxy!\n\n\n\n\nclass Boss extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game) {\n    // Ship/Moving Object related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/boss1.png\";\n    let height = 220;\n    let width = 250;\n    let health = Boss.MAX_HEALTH;\n    let projectileDmg = 2;\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [game.canvasWidth / 2 - width / 2, 0 - height * 2],\n      velocity: [0, 1],\n      speed: 1,\n      health: health,\n      game: game,\n      image: image,\n      type: \"enemies\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, 8],\n        speed: 8,\n        health: projectileDmg,\n        game: game,\n        width: 10,\n        height: 40,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"enemy\",\n      projectileSound: \"bossProjectile\"\n    }];\n\n    // boss projectile patterns, to be activated based on boss phase\n    const patternArgs = [{\n      positionDeltas: [[18, 200], [width - 32, 200]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: 1000,\n      onCooldown: true,\n      timer: null,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[60, 210], [width - 76, 210]],\n      batchFireNum: 2,\n      batchFireInterval: 150,\n      cooldown: 2000,\n      onCooldown: true,\n      timer: null,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[75, 180], [width - 88, 180]],\n      batchFireNum: 2,\n      batchFireInterval: 150,\n      cooldown: 1000,\n      onCooldown: true,\n      timer: null,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[100, 160], [width - 110, 160]],\n      batchFireNum: 3,\n      batchFireInterval: 150,\n      cooldown: 2000,\n      onCooldown: true,\n      timer: null,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n  }\n\n  // box1 is the weakspot\n  getHitbox() {\n    const box1 = {\n      x: this.position[0] + 85,\n      y: this.position[1] + 90,\n      width: 80,\n      height: 70\n    };\n    const box2 = {\n      x: this.position[0] + 10,\n      y: this.position[1] + 90,\n      width: (this.width - 100) / 2,\n      height: this.height - 110\n    };\n    const box3 = {\n      x: this.position[0] + 165,\n      y: this.position[1] + 90,\n      width: (this.width - 100) / 2,\n      height: this.height - 110\n    };\n    const box4 = {\n      x: this.position[0] + 45,\n      y: this.position[1] + 30,\n      width: 155,\n      height: 60\n    };\n    return [box1, box2, box3, box4];\n  }\n\n  // only takes damage if weakpoint hit (index 0 is the hitbox1 weakpoint)\n  // takes in the colliding MovingObject and an array of hitbox collision positions as [[int, int]]\n  handleCollided(otherObj, hitboxesCollided) {\n    const otherObjClass = otherObj.constructor.name;\n    if (otherObjClass === \"Projectile\") {\n      if (hitboxesCollided.includes(0)) {\n        const damage = otherObj.health;\n        this.damageTaken(damage);\n      }\n      otherObj.remove();\n    }\n  }\n\n  // Boss will slowly move down center from the top during cutscene\n  // then move side to side throughout the fight at normal speed \n  updateVelocity() {\n    if (this.movementDisabled) return;\n    if (this.position[1] > 0) {\n      this.speed = 1.5;\n      if (this.velocity[0] === 0 || this.position[0] < 0) {\n        if (this.velocity[0] === 0) {\n          new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.resetCooldown.bind(this, 0), 1250);\n          this.game.sounds.switchBGM(\"bossBGM\");\n          this.game.player.disabled = false;\n        }\n        this.velocity = [this.speed, 0];\n      } else if (this.position[0] > this.game.canvasWidth - this.width) {\n        this.velocity = [-this.speed, 0];\n      }\n    }\n  }\n\n  // Boss shooting patterns updated based on health remaining\n  updateShootingPattern() {\n    if (this.health === 20) {\n      this.patternArgs[0].timer?.clear();\n      this.patternArgs[1].timer?.clear();\n      this.patternArgs[2].timer?.clear();\n      this.patternArgs[0].onCooldown = false;\n      this.patternArgs[1].onCooldown = false;\n      this.patternArgs[2].onCooldown = false;\n      this.patternArgs[3].onCooldown = false;\n    } else if (this.health === 30) {\n      this.patternArgs[0].timer?.clear();\n      this.patternArgs[1].timer?.clear();\n      this.patternArgs[0].onCooldown = false;\n      this.patternArgs[1].onCooldown = false;\n      this.patternArgs[2].onCooldown = false;\n    } else if (this.health === 40) {\n      this.patternArgs[0].timer?.clear();\n      this.patternArgs[0].onCooldown = false;\n      this.patternArgs[1].onCooldown = false;\n    }\n  }\n  shootProjectile() {\n    if (!this.disabled) super.shootProjectile();\n  }\n  damageTaken(damage) {\n    if (!this.disabled) {\n      super.damageTaken(damage);\n      this.updateShootingPattern();\n    }\n  }\n\n  // Boss death animations plays alot of minor explosions and ends with big finale explosion\n  // Then proceeds to game win after a delay\n  remove() {\n    this.game.score += 1000;\n    this.disabled = true;\n\n    // minor explosions\n    for (let i = 0; i < 20; i++) {\n      const timeDelay = i * 200;\n      if (i % 2 === 0) new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => this.game.sounds.add(\"explosion\"), timeDelay);\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n        const hitBoxes = this.getHitbox();\n        const randHitBox = hitBoxes[i % hitBoxes.length];\n        const randPosX = Math.floor(Math.random() * (randHitBox.x + randHitBox.width - randHitBox.x) + randHitBox.x);\n        const randPosY = Math.floor(Math.random() * (randHitBox.y + randHitBox.height - randHitBox.y) + randHitBox.y);\n        const dx = this.velocity[0] < 0 ? 30 : 10;\n        new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 80, [randPosX - dx, randPosY - 70], \"minor\", [0, 0.1]);\n      }, timeDelay);\n    }\n\n    // stop for final explosion\n    new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n      this.velocity = [0, 0];\n      this.speed = 0;\n      this.movementDisabled = true;\n    }, 4000);\n\n    // final explosion and start timer for setting game win\n    new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n      this.game.sounds.playMajorSound(\"bossDeath\");\n      const multiplier = this.velocity[0] < 0 ? 1 : -1;\n      const posX = this.position[0] - this.width / 2;\n      const posY = this.position[1] - this.height / 1.5;\n      new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 500, [posX - 30, posY], \"major\", [0, 0]);\n      super.remove();\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.game.setWin.bind(this.game), 3500);\n    }, 4500);\n  }\n}\n_defineProperty(Boss, \"MAX_HEALTH\", 50);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Boss);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/boss.js\n");

/***/ }),

/***/ "./src/scripts/enemy_ship.js":
/*!***********************************!*\
  !*** ./src/scripts/enemy_ship.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n// Low level enemies that move top to bottom\n// shooting 1 bullet downwards at consistent intervals\n\n\n\nclass EnemyShip extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // posX is the initial x position\n  // cooldown is in milliseconds\n  constructor(game, posX, speed, cooldown) {\n    // Ship/MovingObject related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy1.png\";\n    let height = 40;\n    let width = 46;\n    let health = 1;\n    let projectileDmg = 1;\n\n    // in case the random position clips the ship image out of bounds\n    if (posX < 0 - width) {\n      posX = 0;\n    } else if (posX > game.canvasWidth - width) {\n      posX = game.canvasWidth - width;\n    }\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [posX, 0 - height * 2],\n      velocity: [0, speed],\n      speed: speed,\n      health: health,\n      game: game,\n      image: image,\n      type: \"enemies\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, 8],\n        speed: 8,\n        health: projectileDmg,\n        game: game,\n        width: 5,\n        height: 20,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"enemy\",\n      projectileSound: \"enemyProjectile\"\n    }];\n\n    // projectile pattern\n    const patternArgs = [{\n      positionDeltas: [[width / 2.25, 10]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: cooldown,\n      onCooldown: false,\n      timer: null,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n  }\n\n  // enemy ships simply move from top to bottom\n  // removed once they get below the screen\n  handleBounds(newPosition) {\n    if (!this.inUpperYHeightBounds(newPosition[1])) {\n      this.remove();\n    } else {\n      this.position = newPosition;\n    }\n  }\n  remove() {\n    if (this.health <= 0) {\n      this.game.sounds.add(\"explosion\");\n      new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 80, this.position, \"minor\", [0, 0.25]);\n      this.game.score += 50;\n    }\n    super.remove();\n    this.game.enemiesRemaining -= 1;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnemyShip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxFQUFFO01BQ3BCLElBQUksQ0FBQ1YsSUFBSSxDQUFDK0IsTUFBTSxDQUFDQyxHQUFHLENBQUMsV0FBVyxDQUFDO01BQ2pDLElBQUluQyxrREFBUyxDQUFDLElBQUksQ0FBQ0csSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUNjLFFBQVEsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7TUFDL0QsSUFBSSxDQUFDZCxJQUFJLENBQUNpQyxLQUFLLElBQUksRUFBRTtJQUN2QjtJQUVBLEtBQUssQ0FBQ0gsTUFBTSxFQUFFO0lBQ2QsSUFBSSxDQUFDOUIsSUFBSSxDQUFDa0MsZ0JBQWdCLElBQUksQ0FBQztFQUNqQztBQUNGO0FBRUEsK0RBQWVwQyxTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZW5lbXlfc2hpcC5qcz9iNWYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIExvdyBsZXZlbCBlbmVtaWVzIHRoYXQgbW92ZSB0b3AgdG8gYm90dG9tXG4vLyBzaG9vdGluZyAxIGJ1bGxldCBkb3dud2FyZHMgYXQgY29uc2lzdGVudCBpbnRlcnZhbHNcblxuaW1wb3J0IFNoaXAgZnJvbSBcIi4vc2hpcFwiO1xuaW1wb3J0IEV4cGxvc2lvbiBmcm9tIFwiLi9leHBsb3Npb25cIjtcblxuY2xhc3MgRW5lbXlTaGlwIGV4dGVuZHMgU2hpcCB7XG4gIC8vIHBvc1ggaXMgdGhlIGluaXRpYWwgeCBwb3NpdGlvblxuICAvLyBjb29sZG93biBpcyBpbiBtaWxsaXNlY29uZHNcbiAgY29uc3RydWN0b3IoZ2FtZSwgcG9zWCwgc3BlZWQsIGNvb2xkb3duKSB7XG4gICAgLy8gU2hpcC9Nb3ZpbmdPYmplY3QgcmVsYXRlZCBhcmd1bWVudHNcbiAgICBsZXQgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9pbWFnZXMvZW5lbXkxLnBuZ1wiO1xuICAgIGxldCBoZWlnaHQgPSA0MDtcbiAgICBsZXQgd2lkdGggPSA0NjtcbiAgICBsZXQgaGVhbHRoID0gMTtcbiAgICBsZXQgcHJvamVjdGlsZURtZyA9IDE7XG5cbiAgICAvLyBpbiBjYXNlIHRoZSByYW5kb20gcG9zaXRpb24gY2xpcHMgdGhlIHNoaXAgaW1hZ2Ugb3V0IG9mIGJvdW5kc1xuICAgIGlmIChwb3NYIDwgMCAtIHdpZHRoKSB7XG4gICAgICBwb3NYID0gMDtcbiAgICB9IGVsc2UgaWYgKHBvc1ggPiBnYW1lLmNhbnZhc1dpZHRoIC0gd2lkdGgpIHtcbiAgICAgIHBvc1ggPSBnYW1lLmNhbnZhc1dpZHRoIC0gd2lkdGg7XG4gICAgfVxuXG4gICAgY29uc3Qgb2JqQXJncyA9IHtcbiAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgcG9zaXRpb246IFtwb3NYLCAwIC0gKGhlaWdodCAqIDIpXSxcbiAgICAgIHZlbG9jaXR5OiBbMCwgc3BlZWRdLFxuICAgICAgc3BlZWQ6IHNwZWVkLFxuICAgICAgaGVhbHRoOiBoZWFsdGgsXG4gICAgICBnYW1lOiBnYW1lLFxuICAgICAgaW1hZ2U6IGltYWdlLFxuICAgICAgdHlwZTogXCJlbmVtaWVzXCJcbiAgICB9XG5cbiAgICAvLyBQcm9qZWN0aWxlIHJlbGF0ZWQgYXJndW1lbnRzXG4gICAgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9pbWFnZXMvZW5lbXlfcHJvamVjdGlsZS5wbmdcIjtcbiAgICBjb25zdCBwcm9qZWN0aWxlQXJncyA9IFt7XG4gICAgICBvYmpBcmdzOiB7XG4gICAgICAgIHZlbG9jaXR5OiBbMCwgOF0sXG4gICAgICAgIHNwZWVkOiA4LFxuICAgICAgICBoZWFsdGg6IHByb2plY3RpbGVEbWcsXG4gICAgICAgIGdhbWU6IGdhbWUsXG4gICAgICAgIHdpZHRoOiA1LFxuICAgICAgICBoZWlnaHQ6IDIwLFxuICAgICAgICBpbWFnZTogaW1hZ2VcbiAgICAgIH0sXG4gICAgICB0eXBlOiBcImJ1bGxldFwiLFxuICAgICAgb3JpZ2luOiBcImVuZW15XCIsXG4gICAgICBwcm9qZWN0aWxlU291bmQ6IFwiZW5lbXlQcm9qZWN0aWxlXCJcbiAgICB9XVxuXG4gICAgLy8gcHJvamVjdGlsZSBwYXR0ZXJuXG4gICAgY29uc3QgcGF0dGVybkFyZ3MgPSBbe1xuICAgICAgcG9zaXRpb25EZWx0YXM6IFtbd2lkdGgvKDIuMjUpLCAxMF1dLFxuICAgICAgYmF0Y2hGaXJlTnVtOiAxLFxuICAgICAgYmF0Y2hGaXJlSW50ZXJ2YWw6IDAsXG4gICAgICBjb29sZG93bjogY29vbGRvd24sXG4gICAgICBvbkNvb2xkb3duOiBmYWxzZSxcbiAgICAgIHRpbWVyOiBudWxsLFxuICAgICAgcHJvamVjdGlsZUFyZ0luZGV4OiAwXG4gICAgfV1cblxuICAgIHN1cGVyKG9iakFyZ3MsIHByb2plY3RpbGVBcmdzLCBwYXR0ZXJuQXJncyk7XG4gIH1cblxuICAvLyBlbmVteSBzaGlwcyBzaW1wbHkgbW92ZSBmcm9tIHRvcCB0byBib3R0b21cbiAgLy8gcmVtb3ZlZCBvbmNlIHRoZXkgZ2V0IGJlbG93IHRoZSBzY3JlZW5cbiAgaGFuZGxlQm91bmRzKG5ld1Bvc2l0aW9uKSB7XG4gICAgaWYgKCF0aGlzLmluVXBwZXJZSGVpZ2h0Qm91bmRzKG5ld1Bvc2l0aW9uWzFdKSkge1xuICAgICAgdGhpcy5yZW1vdmUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wb3NpdGlvbiA9IG5ld1Bvc2l0aW9uO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZSgpIHtcbiAgICBpZiAodGhpcy5oZWFsdGggPD0gMCkge1xuICAgICAgdGhpcy5nYW1lLnNvdW5kcy5hZGQoXCJleHBsb3Npb25cIik7XG4gICAgICBuZXcgRXhwbG9zaW9uKHRoaXMuZ2FtZSwgODAsIHRoaXMucG9zaXRpb24sIFwibWlub3JcIiwgWzAsIDAuMjVdKTtcbiAgICAgIHRoaXMuZ2FtZS5zY29yZSArPSA1MDtcbiAgICB9XG5cbiAgICBzdXBlci5yZW1vdmUoKTtcbiAgICB0aGlzLmdhbWUuZW5lbWllc1JlbWFpbmluZyAtPSAxO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVuZW15U2hpcDsiXSwibmFtZXMiOlsiU2hpcCIsIkV4cGxvc2lvbiIsIkVuZW15U2hpcCIsImNvbnN0cnVjdG9yIiwiZ2FtZSIsInBvc1giLCJzcGVlZCIsImNvb2xkb3duIiwiaW1hZ2UiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzcmMiLCJoZWlnaHQiLCJ3aWR0aCIsImhlYWx0aCIsInByb2plY3RpbGVEbWciLCJjYW52YXNXaWR0aCIsIm9iakFyZ3MiLCJwb3NpdGlvbiIsInZlbG9jaXR5IiwidHlwZSIsInByb2plY3RpbGVBcmdzIiwib3JpZ2luIiwicHJvamVjdGlsZVNvdW5kIiwicGF0dGVybkFyZ3MiLCJwb3NpdGlvbkRlbHRhcyIsImJhdGNoRmlyZU51bSIsImJhdGNoRmlyZUludGVydmFsIiwib25Db29sZG93biIsInRpbWVyIiwicHJvamVjdGlsZUFyZ0luZGV4IiwiaGFuZGxlQm91bmRzIiwibmV3UG9zaXRpb24iLCJpblVwcGVyWUhlaWdodEJvdW5kcyIsInJlbW92ZSIsInNvdW5kcyIsImFkZCIsInNjb3JlIiwiZW5lbWllc1JlbWFpbmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/enemy_ship.js\n");

/***/ }),

/***/ "./src/scripts/explosion.js":
/*!**********************************!*\
  !*** ./src/scripts/explosion.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n// Explosion class handles different explosion types for death animations\n\n\nclass Explosion extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // position and velocityDeltas are [int, int]\n  // explosionType is a string of either \"minor\" or \"major\"\n  constructor(game, size, position, explosionType, velocityDelta) {\n    const image = document.createElement(\"img\");\n\n    // minor for enemy ships, major for player/boss death\n    if (explosionType === \"minor\") {\n      image.src = \"src/assets/images/explosion1.png\";\n    } else if (explosionType === \"major\") {\n      image.src = \"src/assets/images/explosion2.png\";\n    }\n    const argsObj = {\n      position: position,\n      velocity: [0, 0],\n      speed: 0,\n      health: 0,\n      game: game,\n      width: size,\n      height: size,\n      image: image,\n      type: \"explosions\"\n    };\n    super(argsObj);\n    if (explosionType === \"minor\") {\n      this.maxFrames = 20;\n      this.imgSize = 192;\n      this.cutSize = 5;\n    } else if (explosionType === \"major\") {\n      this.maxFrames = 48;\n      this.imgSize = 240;\n      this.cutSize = 8;\n    }\n    this.frame = 0;\n    this.velocityDelta = velocityDelta;\n  }\n\n  // explosions are animated sprites with multiple frames\n  draw(ctx) {\n    const yOffset = Math.floor(this.frame / this.cutSize);\n    const xOffset = this.frame % this.cutSize;\n    ctx.drawImage(this.image, this.imgSize * xOffset, this.imgSize * yOffset, this.imgSize, this.imgSize, this.position[0], this.position[1], this.width, this.height);\n    this.frame += 1;\n    if (this.frame >= this.maxFrames) {\n      this.remove();\n    }\n  }\n  updateVelocity() {\n    this.velocity[0] += this.velocityDelta[0];\n    this.velocity[1] += this.velocityDelta[1];\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Explosion);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Oi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZXhwbG9zaW9uLmpzP2UzNTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwbG9zaW9uIGNsYXNzIGhhbmRsZXMgZGlmZmVyZW50IGV4cGxvc2lvbiB0eXBlcyBmb3IgZGVhdGggYW5pbWF0aW9uc1xuXG5pbXBvcnQgTW92aW5nT2JqZWN0IGZyb20gXCIuL21vdmluZ19vYmplY3RcIjtcblxuY2xhc3MgRXhwbG9zaW9uIGV4dGVuZHMgTW92aW5nT2JqZWN0IHtcbiAgLy8gcG9zaXRpb24gYW5kIHZlbG9jaXR5RGVsdGFzIGFyZSBbaW50LCBpbnRdXG4gIC8vIGV4cGxvc2lvblR5cGUgaXMgYSBzdHJpbmcgb2YgZWl0aGVyIFwibWlub3JcIiBvciBcIm1ham9yXCJcbiAgY29uc3RydWN0b3IoZ2FtZSwgc2l6ZSwgcG9zaXRpb24sIGV4cGxvc2lvblR5cGUsIHZlbG9jaXR5RGVsdGEpIHtcbiAgICBjb25zdCBpbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgXG4gICAgLy8gbWlub3IgZm9yIGVuZW15IHNoaXBzLCBtYWpvciBmb3IgcGxheWVyL2Jvc3MgZGVhdGhcbiAgICBpZiAoZXhwbG9zaW9uVHlwZSA9PT0gXCJtaW5vclwiKSB7XG4gICAgICBpbWFnZS5zcmMgPSBcInNyYy9hc3NldHMvaW1hZ2VzL2V4cGxvc2lvbjEucG5nXCI7XG4gICAgfSBlbHNlIGlmIChleHBsb3Npb25UeXBlID09PSBcIm1ham9yXCIgKSB7XG4gICAgICBpbWFnZS5zcmMgPSBcInNyYy9hc3NldHMvaW1hZ2VzL2V4cGxvc2lvbjIucG5nXCI7XG4gICAgfVxuXG4gICAgY29uc3QgYXJnc09iaiA9IHtcbiAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbixcbiAgICAgIHZlbG9jaXR5OiBbMCwgMF0sXG4gICAgICBzcGVlZDogMCxcbiAgICAgIGhlYWx0aDogMCxcbiAgICAgIGdhbWU6IGdhbWUsXG4gICAgICB3aWR0aDogc2l6ZSxcbiAgICAgIGhlaWdodDogc2l6ZSxcbiAgICAgIGltYWdlOiBpbWFnZSxcbiAgICAgIHR5cGU6IFwiZXhwbG9zaW9uc1wiXG4gICAgfVxuICAgIHN1cGVyKGFyZ3NPYmopO1xuXG4gICAgaWYgKGV4cGxvc2lvblR5cGUgPT09IFwibWlub3JcIikge1xuICAgICAgdGhpcy5tYXhGcmFtZXMgPSAyMDtcbiAgICAgIHRoaXMuaW1nU2l6ZSA9IDE5MjtcbiAgICAgIHRoaXMuY3V0U2l6ZSA9IDU7XG4gICAgfSBlbHNlIGlmIChleHBsb3Npb25UeXBlID09PSBcIm1ham9yXCIgKSB7XG4gICAgICB0aGlzLm1heEZyYW1lcyA9IDQ4O1xuICAgICAgdGhpcy5pbWdTaXplID0gMjQwO1xuICAgICAgdGhpcy5jdXRTaXplID0gODtcbiAgICB9XG5cbiAgICB0aGlzLmZyYW1lID0gMDtcbiAgICB0aGlzLnZlbG9jaXR5RGVsdGEgPSB2ZWxvY2l0eURlbHRhO1xuICB9XG5cbiAgLy8gZXhwbG9zaW9ucyBhcmUgYW5pbWF0ZWQgc3ByaXRlcyB3aXRoIG11bHRpcGxlIGZyYW1lc1xuICBkcmF3KGN0eCkge1xuICAgIGNvbnN0IHlPZmZzZXQgPSBNYXRoLmZsb29yKHRoaXMuZnJhbWUvdGhpcy5jdXRTaXplKTtcbiAgICBjb25zdCB4T2Zmc2V0ID0gdGhpcy5mcmFtZSAlIHRoaXMuY3V0U2l6ZTtcbiAgICBjdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIFxuICAgICAgICAgICAgICAgICAgdGhpcy5pbWdTaXplKnhPZmZzZXQsIHRoaXMuaW1nU2l6ZSp5T2Zmc2V0LCB0aGlzLmltZ1NpemUsIHRoaXMuaW1nU2l6ZSwgXG4gICAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uWzBdLCB0aGlzLnBvc2l0aW9uWzFdLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgdGhpcy5mcmFtZSArPSAxO1xuXG4gICAgaWYgKHRoaXMuZnJhbWUgPj0gdGhpcy5tYXhGcmFtZXMpIHtcbiAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlVmVsb2NpdHkoKSB7XG4gICAgdGhpcy52ZWxvY2l0eVswXSArPSB0aGlzLnZlbG9jaXR5RGVsdGFbMF07XG4gICAgdGhpcy52ZWxvY2l0eVsxXSArPSB0aGlzLnZlbG9jaXR5RGVsdGFbMV07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXhwbG9zaW9uOyJdLCJuYW1lcyI6WyJNb3ZpbmdPYmplY3QiLCJFeHBsb3Npb24iLCJjb25zdHJ1Y3RvciIsImdhbWUiLCJzaXplIiwicG9zaXRpb24iLCJleHBsb3Npb25UeXBlIiwidmVsb2NpdHlEZWx0YSIsImltYWdlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiYXJnc09iaiIsInZlbG9jaXR5Iiwic3BlZWQiLCJoZWFsdGgiLCJ3aWR0aCIsImhlaWdodCIsInR5cGUiLCJtYXhGcmFtZXMiLCJpbWdTaXplIiwiY3V0U2l6ZSIsImZyYW1lIiwiZHJhdyIsImN0eCIsInlPZmZzZXQiLCJNYXRoIiwiZmxvb3IiLCJ4T2Zmc2V0IiwiZHJhd0ltYWdlIiwicmVtb3ZlIiwidXBkYXRlVmVsb2NpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/explosion.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player_ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player_ship */ \"./src/scripts/player_ship.js\");\n/* harmony import */ var _enemy_ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enemy_ship */ \"./src/scripts/enemy_ship.js\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boss */ \"./src/scripts/boss.js\");\n/* harmony import */ var _sound__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sound */ \"./src/scripts/sound.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// Game class handles all game state logic\n\n\n\n\n\n\nclass Game {\n  constructor(canvas, gameView) {\n    this.canvas = canvas;\n    this.canvasWidth = canvas.width;\n    this.canvasHeight = canvas.height;\n    this.gameView = gameView;\n    this.enemyWave = 0;\n    this.addEnemyOnCooldown = true;\n    this.addedEnemies = 0;\n    this.enemiesRemaining = 0;\n    this.enemyWaveCount = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.win = false;\n    this.secretEnd = false;\n    this.startScreen = true;\n\n    // all moving objects and timers have a unique game id\n    this.idCounter = 1;\n    this.timers = {};\n    this.allMovingObjects = {\n      player: {},\n      enemies: {},\n      projectiles: {},\n      explosions: {}\n    };\n    this.player = new _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.bossFight = false;\n    this.boss = null;\n\n    // all sounds in the game handled with the Sound class\n    this.sounds = new _sound__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n  }\n\n  // apply game logic to determine next state of the game for next animation frame\n  // time changes, handled by GameView, are used to smooth gameplay during fps changes\n  step(timeDelta) {\n    this.checkCollisions();\n    if (!this.bossFight) this.setEnemies();\n    this.moveObjects(timeDelta);\n    this.shootProjectiles();\n  }\n  pauseTimers() {\n    Object.values(this.timers).forEach(timer => timer.pause());\n  }\n  resumeTimers() {\n    Object.values(this.timers).forEach(timer => timer.resume());\n  }\n\n  // call move() for all MovingObject objects\n  moveObjects(timeDelta) {\n    for (let key in this.allMovingObjects) {\n      Object.values(this.allMovingObjects[key]).forEach(obj => obj.move(timeDelta));\n    }\n  }\n\n  // call shoot() for all Ship objects (player and enemies)\n  shootProjectiles() {\n    this.player.shootProjectile();\n    Object.values(this.allMovingObjects.enemies).forEach(enemy => enemy.shootProjectile());\n  }\n\n  // first check projectile collisions, then check player to enemy ship collisions\n  checkCollisions() {\n    Object.values(this.allMovingObjects.projectiles).forEach(projectile => {\n      if (projectile.origin === \"player\") {\n        Object.values(this.allMovingObjects.enemies).forEach(enemy => {\n          enemy.collideCheck(projectile);\n        });\n      } else {\n        this.player.collideCheck(projectile);\n      }\n    });\n    Object.values(this.allMovingObjects.enemies).forEach(enemy => {\n      this.player.collideCheck(enemy);\n    });\n  }\n\n  // heal player 3hp per round (up to max health)\n  healPlayer() {\n    if (this.allMovingObjects.player && this.player.health > 0) {\n      this.player.health = Math.min(this.player.health + 3, _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"].MAX_HEALTH);\n    }\n  }\n\n  // next wave if 0 enemies remaining, activate boss fight if last wave finished\n  // increases enemies per wave\n  // multiply score by remaining player health, and then heal player\n  setEnemies() {\n    if (this.enemiesRemaining === 0) {\n      if (this.enemyWave < Game.MAX_ENEMY_WAVE) {\n        this.enemyWave += 1;\n        this.enemyWaveCount = this.enemyWave * 5;\n        this.enemiesRemaining = this.enemyWaveCount;\n        this.addedEnemies = 0;\n        if (this.enemyWave > 1) {\n          this.score += this.player.health * 100;\n          this.healPlayer();\n        }\n      } else {\n        this.setBoss();\n      }\n    }\n\n    // throughout a wave, enemies are placed in clusters of 3 to 10 at different intervals\n    if (!this.addEnemyOnCooldown) {\n      const remaining = this.enemyWaveCount - this.addedEnemies;\n      let numNewEnemies;\n      if (remaining < 10) {\n        numNewEnemies = remaining;\n      } else {\n        numNewEnemies = Math.floor(Math.random() * (10 - 3) + 3);\n      }\n      this.addedEnemies += numNewEnemies;\n\n      // randomize position, speed, and shoot cooldown for each enemy\n      for (let i = 0; i < numNewEnemies; i++) {\n        const randPosX = Math.floor(Math.random() * this.canvasWidth);\n        const randSpeed = Math.random() * (5 - 2) + 2;\n        const randCooldown = Math.floor(Math.random() * (1000 - 450) + 450);\n        new _enemy_ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, randPosX, randSpeed, randCooldown);\n      }\n\n      // set cooldown before adding next group of enemies, reset flag in 1 to 3 seconds\n      this.addEnemyOnCooldown = true;\n      const randTimeOut = Math.random() * (3000 - 1000) + 1000;\n      new _timer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.resetAddEnemyCooldown.bind(this), randTimeOut);\n    }\n  }\n  resetAddEnemyCooldown() {\n    this.addEnemyOnCooldown = false;\n  }\n\n  // waits for all player projectiles to clear, and temporarily disable player (for cutscene to play) \n  // also heal player and update score\n  setBoss() {\n    this.player.disabled = true;\n    if (Object.values(this.allMovingObjects.projectiles).length === 0) {\n      this.sounds.switchBGM(\"bossIncomingBGM\");\n      this.boss = new _boss__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n      this.score += this.player.health * 100;\n      this.healPlayer();\n      this.bossFight = true;\n      this.gameView.switchGameInformation();\n    }\n  }\n\n  // secret ending if both player and boss die\n  setWin() {\n    if (this.player?.health <= 0) this.secretEnd = true;\n    if (!this.gameOver) {\n      this.score += this.player.health * 200;\n      this.win = true;\n      this.sounds.playMajorSound(\"win\");\n    }\n  }\n  setGameOver() {\n    if (this.boss?.health <= 0) {\n      this.secretEnd = true;\n    } else if (!this.win) {\n      this.gameOver = true;\n      this.sounds.playMajorSound(\"gameOver\");\n    }\n  }\n\n  // resetting the game on retries\n  reset() {\n    this.enemyWave = 0;\n    this.addEnemyOnCooldown = true;\n    this.addedEnemies = 0;\n    this.enemiesRemaining = 0;\n    this.enemyWaveCount = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.win = false;\n    this.secretEnd = false;\n    this.startScreen = false;\n    for (const id in this.timers) delete this.timers[id];\n    for (const type in this.allMovingObjects) {\n      for (const id in this.allMovingObjects[type]) {\n        delete this.allMovingObjects[type][id];\n      }\n    }\n    this.idCounter = 1;\n    this.player = new _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.boss = null;\n    this.bossFight = false;\n    this.gameView.switchGameInformation();\n    this.sounds.reset();\n  }\n}\n_defineProperty(Game, \"MAX_ENEMY_WAVE\", 5);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boss */ \"./src/scripts/boss.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// GameView handles anything canvas/html related, and event handlers\n// Also creates the single Game object that handles all game logic\n\n\n\nclass GameView {\n  // player movement keybind mappings\n\n  // prevent shooting when clicking these html elements\n\n  constructor(canvas, canvasContext) {\n    this.ctx = canvasContext;\n    this.canvas = canvas;\n    this.canvasWidth = canvas.width;\n    this.canvasHeight = canvas.height;\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, this);\n\n    // html game info elements that get updated throughout the game\n    this.scoreSpan = document.getElementById(\"score\");\n    this.playerHealthBar = document.getElementById(\"player-health-bar\");\n    this.bossHealthBar = document.getElementById(\"boss-health-bar\");\n    this.bossInfo = document.getElementById(\"boss-info\");\n    this.waveInfo = document.getElementById(\"wave-info\");\n    this.waveSpan = document.getElementById(\"wave-number\");\n    this.enemiesRemainingSpan = document.getElementById(\"enemies-remaining\");\n\n    // moving background in the canvas element\n    // x, y are the background position offsets as it moves (only y changes)\n    // dy controls change in speed\n    const backgroundImg = new Image();\n    backgroundImg.src = \"src/assets/images/game_background.png\";\n    this.bgSettings = {\n      img: backgroundImg,\n      x: 0,\n      y: 700,\n      dy: 0.5\n    };\n\n    // mouse follow options\n    this.touchOnElement = document.getElementById(\"touch-on\");\n    this.touchOffElement = document.getElementById(\"touch-off\");\n    this.mouseFollow = true;\n    this.mousePosition = null; // {x: xValue, y: yValue}\n\n    // pause options\n    this.pauseOnElement = document.getElementById(\"pause-on\");\n    this.pauseOffElement = document.getElementById(\"pause-off\");\n    this.pauseText = document.getElementById(\"pause-text\");\n    this.pause = false;\n    this.toggleSound = false;\n\n    // only want to draw start, win, and game over messages once;\n    this.messageDrawn = false;\n    this.bindStartHandler();\n  }\n\n  // starts up the animate recursive call loop, and draws initial background\n  start() {\n    this.lastTime = 0;\n    this.drawBackground();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // draw next state of the game, or start/win/game over message\n  // takes in time, which is automatically given and kept track off in recursive calls\n  animate(time) {\n    if (this.game.startScreen || this.game.gameOver || this.game.win) {\n      if (this.pause) this.handlePauseToggle();\n      this.drawStartWinGameOver();\n    } else if (!this.pause) {\n      this.draw();\n      this.updateGameInfo();\n      const timeDelta = time - this.lastTime;\n      this.game.step(timeDelta);\n    }\n    this.lastTime = time;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // draw start/win/game over message once and remove player controls\n  drawStartWinGameOver() {\n    if (!this.messageDrawn) {\n      const message = this.game.startScreen ? [\"Press any key or click here to\", \"START\"] : this.game.secretEnd ? \"🫡\" : this.game.gameOver ? \"GAME OVER\" : \"YOU WIN\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillStyle = \"white\";\n      if (this.game.startScreen) {\n        this.ctx.font = \"40px roboto\";\n        this.ctx.fillText(message[0], this.canvasWidth / 2, this.canvasHeight / 2 - 50);\n        this.ctx.font = \"48px roboto\";\n        this.ctx.fillText(message[1], this.canvasWidth / 2, this.canvasHeight / 2);\n      } else {\n        this.ctx.font = \"48px roboto\";\n        this.ctx.fillText(message, this.canvasWidth / 2, this.canvasHeight / 2);\n      }\n      this.messageDrawn = true;\n      if (this.game.gameOver || this.game.win) {\n        this.removeControlHandlers();\n        this.updateScore();\n        setTimeout(this.drawRetryKey.bind(this, this.ctx), 3000);\n      }\n      ;\n    }\n  }\n  drawRetryKey() {\n    const message = \"(press any key or click here to retry)\";\n    this.ctx.font = \"24px roboto\";\n    this.ctx.fillText(message, this.canvasWidth / 2, this.canvasHeight / 2 + 50);\n    this.bindRetryHandler();\n  }\n  drawPause() {\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.font = \"48px roboto\";\n    this.ctx.fillText(\"PAUSED\", this.canvasWidth / 2, this.canvasHeight / 2);\n  }\n\n  // draw moving background and then all game objects\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    this.drawBackground();\n    for (let key in this.game.allMovingObjects) {\n      Object.values(this.game.allMovingObjects[key]).forEach(obj => obj.draw(this.ctx));\n    }\n  }\n\n  // canvas background moves vertically downward\n  drawBackground() {\n    const img = this.bgSettings.img;\n\n    // if end is reached, reset image back to beginning\n    if (this.bgSettings.y > this.canvasHeight) {\n      this.bgSettings.y -= img.height;\n    }\n\n    // if looping around, cut remaining end and draw below new\n    if (this.bgSettings.y > 0) {\n      this.ctx.drawImage(img, this.bgSettings.x, this.bgSettings.y - img.height, img.width, img.height);\n    }\n\n    // draw background and then update new position\n    this.ctx.drawImage(img, this.bgSettings.x, this.bgSettings.y, img.width, img.height);\n    this.bgSettings.y += this.bgSettings.dy;\n  }\n\n  // updates all game info related html elements\n  updateGameInfo() {\n    this.updateScore();\n    this.updateHealthBar('player');\n    if (this.game.bossFight) {\n      this.updateHealthBar('boss');\n    } else {\n      this.waveSpan.innerText = this.game.enemyWave;\n      this.enemiesRemainingSpan.innerText = this.game.enemiesRemaining;\n    }\n  }\n  updateScore() {\n    this.scoreSpan.innerText = this.game.score;\n  }\n\n  // updates either boss or player hp\n  // type is a string of either 'player' or 'boss'\n  updateHealthBar(type) {\n    let obj, healthBar;\n    if (type === 'player') {\n      obj = this.game.player;\n      healthBar = this.playerHealthBar;\n    } else {\n      obj = this.game.boss;\n      healthBar = this.bossHealthBar;\n    }\n    let health = obj.health;\n    const healthPoint = document.createElement(\"li\");\n    healthPoint.setAttribute(\"class\", `${type}-health-point`);\n    if (type === 'boss') health = Math.ceil(health / (_boss__WEBPACK_IMPORTED_MODULE_1__[\"default\"].MAX_HEALTH / 10));\n    if (healthBar.children.length < health) {\n      for (let i = 0; i < health - healthBar.children.length; i++) {\n        healthBar.appendChild(healthPoint);\n      }\n    } else if (healthBar.children.length > health) {\n      for (let i = 0; i < healthBar.children.length - health; i++) {\n        const lastChild = healthBar.lastChild;\n        if (lastChild) healthBar.removeChild(healthBar.lastChild);\n      }\n    }\n  }\n\n  // switches between boss and enemy wave html elements \n  switchGameInformation() {\n    if (this.game.bossFight) {\n      this.waveInfo.style.display = \"none\";\n      this.bossInfo.style.display = \"flex\";\n    } else {\n      this.waveInfo.style.display = \"flex\";\n      this.bossInfo.style.display = \"none\";\n    }\n  }\n\n  // start playing the game\n  handleStartKey(event) {\n    if (event?.key === \" \") event.preventDefault();\n    this.canvas.scrollIntoView();\n    this.game.sounds.switchBGM(\"waveBGM\");\n    this.game.startScreen = false;\n    document.removeEventListener(\"keypress\", this.startHandler);\n    this.canvas.removeEventListener(\"pointerdown\", this.startHandler);\n    this.bindControlHandlers();\n    setTimeout(this.game.resetAddEnemyCooldown.bind(this.game), 1500);\n    this.messageDrawn = false;\n  }\n  bindStartHandler() {\n    this.startHandler = this.handleStartKey.bind(this);\n    document.addEventListener(\"keypress\", this.startHandler);\n    this.canvas.addEventListener(\"pointerdown\", this.startHandler);\n  }\n\n  // retry on win/game over\n  handleRetryKey(event) {\n    if (event?.key === \" \") event.preventDefault();\n    this.canvas.scrollIntoView();\n    document.removeEventListener(\"keypress\", this.retryHandler);\n    this.canvas.removeEventListener(\"pointerdown\", this.retryHandler);\n    this.game.reset();\n    this.bindControlHandlers();\n    setTimeout(this.game.resetAddEnemyCooldown.bind(this.game), 1500);\n    this.messageDrawn = false;\n  }\n  bindRetryHandler() {\n    this.retryHandler = this.handleRetryKey.bind(this);\n    document.addEventListener(\"keypress\", this.retryHandler);\n    this.canvas.addEventListener(\"pointerdown\", this.retryHandler);\n  }\n\n  // mouse/touch follow movements\n  handleMouseMove(event) {\n    const rect = this.canvas.getBoundingClientRect();\n    const xScale = this.canvas.width / rect.width;\n    const yScale = this.canvas.height / rect.height;\n    const x = (event.clientX - rect.left) * xScale;\n    const y = (event.clientY - rect.top) * yScale;\n    this.mousePosition = {\n      x,\n      y\n    };\n  }\n  handleMouseOut() {\n    this.mousePosition = null;\n  }\n  handleMouseFollowToggle() {\n    if (this.mouseFollow) {\n      this.touchOnElement.style.display = 'none';\n      this.touchOffElement.style.display = 'block';\n    } else {\n      this.touchOnElement.style.display = 'block';\n      this.touchOffElement.style.display = 'none';\n    }\n    this.mouseFollow = !this.mouseFollow;\n  }\n\n  // pause/unpause\n  handlePauseToggle() {\n    if ((this.game.startScreen || this.game.gameOver || this.game.win) && !this.pause) {\n      return;\n    }\n    if (this.pause) {\n      this.game.resumeTimers();\n      this.pauseOnElement.style.display = 'none';\n      this.pauseOffElement.style.display = 'block';\n      this.pauseText.innerText = 'pause';\n    } else {\n      this.game.pauseTimers();\n      this.pauseOnElement.style.display = 'block';\n      this.pauseOffElement.style.display = 'none';\n      this.pauseText.innerText = 'play';\n      this.drawPause();\n    }\n    this.pause = !this.pause;\n  }\n\n  // pause and mute when tabbed out or game is out of focus\n  handleVisibilityChange() {\n    if (document.hidden && !(this.game.startScreen || this.game.gameOver || this.game.win) && !this.pause) {\n      this.handlePauseToggle();\n    }\n    if (document.hidden && this.game.sounds.toggle) {\n      this.game.sounds.handleSoundToggle();\n      this.toggleSound = true;\n    } else if (!document.hidden && this.toggleSound) {\n      this.game.sounds.handleSoundToggle();\n      this.toggleSound = false;\n    }\n  }\n\n  // setting option keybinds\n  handleSettingKeybinds(event) {\n    if (event.key === \"m\") this.handleMouseFollowToggle();else if (event.key === \"k\") this.game.sounds.handleSoundToggle();else if (event.key === \"p\") this.handlePauseToggle();\n  }\n\n  // player controls (arrow/wasd to move, spacebar to shoot)\n  handleKeyDown(event) {\n    event.preventDefault();\n    if (GameView.RIGHT_KEYS.includes(event.key)) this.game.player.keysPressed.right = true;else if (GameView.LEFT_KEYS.includes(event.key)) this.game.player.keysPressed.left = true;else if (GameView.UP_KEYS.includes(event.key)) this.game.player.keysPressed.up = true;else if (GameView.DOWN_KEYS.includes(event.key)) this.game.player.keysPressed.down = true;else if (event.key === \" \") this.game.player.keysPressed.shoot = true;\n  }\n  handleKeyUp(event) {\n    event.preventDefault();\n    if (GameView.RIGHT_KEYS.includes(event.key)) this.game.player.keysPressed.right = false;else if (GameView.LEFT_KEYS.includes(event.key)) this.game.player.keysPressed.left = false;else if (GameView.UP_KEYS.includes(event.key)) this.game.player.keysPressed.up = false;else if (GameView.DOWN_KEYS.includes(event.key)) this.game.player.keysPressed.down = false;else if (event.key === \" \") this.game.player.keysPressed.shoot = false;\n  }\n\n  // mouse click/hold to shoot\n  handleMouseDown(event) {\n    const parentId = event.target.parentNode.id;\n    if (!GameView.IGNORE_TARGETS.includes(parentId)) this.game.player.keysPressed.shoot = true;\n  }\n  handleMouseUp() {\n    this.game.player.keysPressed.shoot = false;\n  }\n\n  // binding and removing player controls\n  bindControlHandlers() {\n    this.keyDownHandler = this.handleKeyDown.bind(this);\n    this.keyUpHandler = this.handleKeyUp.bind(this);\n    this.mouseDownHandler = this.handleMouseDown.bind(this);\n    this.mouseUpHandler = this.handleMouseUp.bind(this);\n    this.mouseMoveHandler = this.handleMouseMove.bind(this);\n    this.mouseOutHandler = this.handleMouseOut.bind(this);\n    document.addEventListener(\"keydown\", this.keyDownHandler);\n    document.addEventListener(\"keyup\", this.keyUpHandler);\n    document.addEventListener(\"pointerdown\", this.mouseDownHandler);\n    document.addEventListener(\"pointerup\", this.mouseUpHandler);\n    document.addEventListener(\"pointermove\", this.mouseMoveHandler);\n    document.addEventListener(\"pointerout\", this.mouseOutHandler);\n  }\n  removeControlHandlers() {\n    document.removeEventListener(\"keydown\", this.keyDownHandler);\n    document.removeEventListener(\"keyup\", this.keyUpHandler);\n    document.removeEventListener(\"pointerdown\", this.mouseDownHandler);\n    document.removeEventListener(\"pointerup\", this.mouseUpHandler);\n    document.removeEventListener(\"pointermove\", this.mouseMoveHandler);\n    document.removeEventListener(\"pointerout\", this.mouseOutHandler);\n  }\n}\n_defineProperty(GameView, \"UP_KEYS\", [\"ArrowUp\", 'w']);\n_defineProperty(GameView, \"DOWN_KEYS\", [\"ArrowDown\", 's']);\n_defineProperty(GameView, \"RIGHT_KEYS\", [\"ArrowRight\", 'd']);\n_defineProperty(GameView, \"LEFT_KEYS\", [\"ArrowLeft\", 'a']);\n_defineProperty(GameView, \"IGNORE_TARGETS\", [\"sound-on\", \"sound-off\", \"sound-icons-container\", \"touch-on\", \"touch-off\", \"touch-container\", \"pause-on\", \"pause-off\", \"pause-container\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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OEMsZUFBZSxDQUFDO0VBQy9EO0VBRUFoRyxxQkFBcUJBLENBQUEsRUFBRztJQUN0QmpELFFBQVEsQ0FBQytGLG1CQUFtQixDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUM2QyxjQUFjLENBQUM7SUFDNUQ1SSxRQUFRLENBQUMrRixtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDOEMsWUFBWSxDQUFDO0lBQ3hEN0ksUUFBUSxDQUFDK0YsbUJBQW1CLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQytDLGdCQUFnQixDQUFDO0lBQ2xFOUksUUFBUSxDQUFDK0YsbUJBQW1CLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQ2dELGNBQWMsQ0FBQztJQUM5RC9JLFFBQVEsQ0FBQytGLG1CQUFtQixDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUNpRCxnQkFBZ0IsQ0FBQztJQUNsRWhKLFFBQVEsQ0FBQytGLG1CQUFtQixDQUFDLFlBQVksRUFBRSxJQUFJLENBQUNrRCxlQUFlLENBQUM7RUFDbEU7QUFDRjtBQUFDQyxlQUFBLENBMVlLN0osUUFBUSxhQUVLLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQztBQUFBNkosZUFBQSxDQUY3QjdKLFFBQVEsZUFHTyxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUM7QUFBQTZKLGVBQUEsQ0FIakM3SixRQUFRLGdCQUlRLENBQUMsWUFBWSxFQUFFLEdBQUcsQ0FBQztBQUFBNkosZUFBQSxDQUpuQzdKLFFBQVEsZUFLTyxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUM7QUFBQTZKLGVBQUEsQ0FMakM3SixRQUFRLG9CQVFZLENBQ3RCLFVBQVUsRUFDVixXQUFXLEVBQ1gsdUJBQXVCLEVBQ3ZCLFVBQVUsRUFDVixXQUFXLEVBQ1gsaUJBQWlCLEVBQ2pCLFVBQVUsRUFDVixXQUFXLEVBQ1gsaUJBQWlCLENBQ2xCO0FBMFhILCtEQUFlQSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZ2FtZV92aWV3LmpzPzgwZWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2FtZVZpZXcgaGFuZGxlcyBhbnl0aGluZyBjYW52YXMvaHRtbCByZWxhdGVkLCBhbmQgZXZlbnQgaGFuZGxlcnNcbi8vIEFsc28gY3JlYXRlcyB0aGUgc2luZ2xlIEdhbWUgb2JqZWN0IHRoYXQgaGFuZGxlcyBhbGwgZ2FtZSBsb2dpY1xuXG5pbXBvcnQgR2FtZSBmcm9tIFwiLi9nYW1lXCI7XG5pbXBvcnQgQm9zcyBmcm9tIFwiLi9ib3NzXCI7XG5cbmNsYXNzIEdhbWVWaWV3IHtcbiAgLy8gcGxheWVyIG1vdmVtZW50IGtleWJpbmQgbWFwcGluZ3NcbiAgc3RhdGljIFVQX0tFWVMgPSBbXCJBcnJvd1VwXCIsICd3J11cbiAgc3RhdGljIERPV05fS0VZUyA9IFtcIkFycm93RG93blwiLCAncyddXG4gIHN0YXRpYyBSSUdIVF9LRVlTID0gW1wiQXJyb3dSaWdodFwiLCAnZCddXG4gIHN0YXRpYyBMRUZUX0tFWVMgPSBbXCJBcnJvd0xlZnRcIiwgJ2EnXVxuXG4gIC8vIHByZXZlbnQgc2hvb3Rpbmcgd2hlbiBjbGlja2luZyB0aGVzZSBodG1sIGVsZW1lbnRzXG4gIHN0YXRpYyBJR05PUkVfVEFSR0VUUyA9IFtcbiAgICBcInNvdW5kLW9uXCIsIFxuICAgIFwic291bmQtb2ZmXCIsIFxuICAgIFwic291bmQtaWNvbnMtY29udGFpbmVyXCIsIFxuICAgIFwidG91Y2gtb25cIiwgXG4gICAgXCJ0b3VjaC1vZmZcIiwgXG4gICAgXCJ0b3VjaC1jb250YWluZXJcIixcbiAgICBcInBhdXNlLW9uXCIsIFxuICAgIFwicGF1c2Utb2ZmXCIsIFxuICAgIFwicGF1c2UtY29udGFpbmVyXCJcbiAgXVxuXG4gIGNvbnN0cnVjdG9yKGNhbnZhcywgY2FudmFzQ29udGV4dCkge1xuICAgIHRoaXMuY3R4ID0gY2FudmFzQ29udGV4dDtcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcbiAgICB0aGlzLmNhbnZhc1dpZHRoID0gY2FudmFzLndpZHRoO1xuICAgIHRoaXMuY2FudmFzSGVpZ2h0ID0gY2FudmFzLmhlaWdodDtcbiAgICB0aGlzLmdhbWUgPSBuZXcgR2FtZShjYW52YXMsIHRoaXMpO1xuXG4gICAgLy8gaHRtbCBnYW1lIGluZm8gZWxlbWVudHMgdGhhdCBnZXQgdXBkYXRlZCB0aHJvdWdob3V0IHRoZSBnYW1lXG4gICAgdGhpcy5zY29yZVNwYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNjb3JlXCIpO1xuICAgIHRoaXMucGxheWVySGVhbHRoQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXItaGVhbHRoLWJhclwiKTtcbiAgICB0aGlzLmJvc3NIZWFsdGhCYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJvc3MtaGVhbHRoLWJhclwiKTtcbiAgICB0aGlzLmJvc3NJbmZvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJib3NzLWluZm9cIik7XG4gICAgdGhpcy53YXZlSW5mbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2F2ZS1pbmZvXCIpO1xuICAgIHRoaXMud2F2ZVNwYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndhdmUtbnVtYmVyXCIpO1xuICAgIHRoaXMuZW5lbWllc1JlbWFpbmluZ1NwYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVuZW1pZXMtcmVtYWluaW5nXCIpO1xuXG4gICAgLy8gbW92aW5nIGJhY2tncm91bmQgaW4gdGhlIGNhbnZhcyBlbGVtZW50XG4gICAgLy8geCwgeSBhcmUgdGhlIGJhY2tncm91bmQgcG9zaXRpb24gb2Zmc2V0cyBhcyBpdCBtb3ZlcyAob25seSB5IGNoYW5nZXMpXG4gICAgLy8gZHkgY29udHJvbHMgY2hhbmdlIGluIHNwZWVkXG4gICAgY29uc3QgYmFja2dyb3VuZEltZyA9IG5ldyBJbWFnZSgpO1xuICAgIGJhY2tncm91bmRJbWcuc3JjID0gXCJzcmMvYXNzZXRzL2ltYWdlcy9nYW1lX2JhY2tncm91bmQucG5nXCI7XG4gICAgdGhpcy5iZ1NldHRpbmdzID0ge1xuICAgICAgaW1nOiBiYWNrZ3JvdW5kSW1nLFxuICAgICAgeDogMCxcbiAgICAgIHk6IDcwMCxcbiAgICAgIGR5OiAwLjVcbiAgICB9XG5cbiAgICAvLyBtb3VzZSBmb2xsb3cgb3B0aW9uc1xuICAgIHRoaXMudG91Y2hPbkVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvdWNoLW9uXCIpO1xuICAgIHRoaXMudG91Y2hPZmZFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b3VjaC1vZmZcIik7XG4gICAgdGhpcy5tb3VzZUZvbGxvdyA9IHRydWU7XG4gICAgdGhpcy5tb3VzZVBvc2l0aW9uID0gbnVsbDsgLy8ge3g6IHhWYWx1ZSwgeTogeVZhbHVlfVxuICAgIFxuICAgIC8vIHBhdXNlIG9wdGlvbnNcbiAgICB0aGlzLnBhdXNlT25FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXVzZS1vblwiKTtcbiAgICB0aGlzLnBhdXNlT2ZmRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGF1c2Utb2ZmXCIpO1xuICAgIHRoaXMucGF1c2VUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXVzZS10ZXh0XCIpO1xuICAgIHRoaXMucGF1c2UgPSBmYWxzZTtcbiAgICB0aGlzLnRvZ2dsZVNvdW5kID0gZmFsc2U7XG5cbiAgICAvLyBvbmx5IHdhbnQgdG8gZHJhdyBzdGFydCwgd2luLCBhbmQgZ2FtZSBvdmVyIG1lc3NhZ2VzIG9uY2U7XG4gICAgdGhpcy5tZXNzYWdlRHJhd24gPSBmYWxzZTtcblxuICAgIHRoaXMuYmluZFN0YXJ0SGFuZGxlcigpO1xuICB9XG4gIFxuICAvLyBzdGFydHMgdXAgdGhlIGFuaW1hdGUgcmVjdXJzaXZlIGNhbGwgbG9vcCwgYW5kIGRyYXdzIGluaXRpYWwgYmFja2dyb3VuZFxuICBzdGFydCgpIHtcbiAgICB0aGlzLmxhc3RUaW1lID0gMDtcbiAgICB0aGlzLmRyYXdCYWNrZ3JvdW5kKCk7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0ZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIC8vIGRyYXcgbmV4dCBzdGF0ZSBvZiB0aGUgZ2FtZSwgb3Igc3RhcnQvd2luL2dhbWUgb3ZlciBtZXNzYWdlXG4gIC8vIHRha2VzIGluIHRpbWUsIHdoaWNoIGlzIGF1dG9tYXRpY2FsbHkgZ2l2ZW4gYW5kIGtlcHQgdHJhY2sgb2ZmIGluIHJlY3Vyc2l2ZSBjYWxsc1xuICBhbmltYXRlKHRpbWUpIHtcbiAgICBpZiAodGhpcy5nYW1lLnN0YXJ0U2NyZWVuIHx8IHRoaXMuZ2FtZS5nYW1lT3ZlciB8fCB0aGlzLmdhbWUud2luKSB7XG4gICAgICBpZiAodGhpcy5wYXVzZSkgdGhpcy5oYW5kbGVQYXVzZVRvZ2dsZSgpO1xuICAgICAgdGhpcy5kcmF3U3RhcnRXaW5HYW1lT3ZlcigpO1xuICAgIH0gZWxzZSBpZiAoIXRoaXMucGF1c2UpIHtcbiAgICAgIHRoaXMuZHJhdygpO1xuICAgICAgdGhpcy51cGRhdGVHYW1lSW5mbygpO1xuICAgICAgY29uc3QgdGltZURlbHRhID0gdGltZSAtIHRoaXMubGFzdFRpbWU7XG4gICAgICB0aGlzLmdhbWUuc3RlcCh0aW1lRGVsdGEpO1xuICAgIH1cblxuICAgIHRoaXMubGFzdFRpbWUgPSB0aW1lO1xuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSk7XG4gIH1cblxuICAvLyBkcmF3IHN0YXJ0L3dpbi9nYW1lIG92ZXIgbWVzc2FnZSBvbmNlIGFuZCByZW1vdmUgcGxheWVyIGNvbnRyb2xzXG4gIGRyYXdTdGFydFdpbkdhbWVPdmVyKCkge1xuICAgIGlmICghdGhpcy5tZXNzYWdlRHJhd24pIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB0aGlzLmdhbWUuc3RhcnRTY3JlZW4gXG4gICAgICAgICAgICAgICAgICAgICAgPyAgW1wiUHJlc3MgYW55IGtleSBvciBjbGljayBoZXJlIHRvXCIsIFwiU1RBUlRcIl1cbiAgICAgICAgICAgICAgICAgICAgICA6IHRoaXMuZ2FtZS5zZWNyZXRFbmRcbiAgICAgICAgICAgICAgICAgICAgICAgID8gXCLwn6uhXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIDogdGhpcy5nYW1lLmdhbWVPdmVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gXCJHQU1FIE9WRVJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiWU9VIFdJTlwiXG5cbiAgICAgIHRoaXMuY3R4LnRleHRBbGlnbiA9IFwiY2VudGVyXCI7XG4gICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSBcIndoaXRlXCI7XG5cbiAgICAgIGlmICh0aGlzLmdhbWUuc3RhcnRTY3JlZW4pIHtcbiAgICAgICAgdGhpcy5jdHguZm9udCA9IFwiNDBweCByb2JvdG9cIjtcbiAgICAgICAgdGhpcy5jdHguZmlsbFRleHQobWVzc2FnZVswXSwgdGhpcy5jYW52YXNXaWR0aC8yLCB0aGlzLmNhbnZhc0hlaWdodC8yIC0gNTApO1xuICAgICAgICB0aGlzLmN0eC5mb250ID0gXCI0OHB4IHJvYm90b1wiO1xuICAgICAgICB0aGlzLmN0eC5maWxsVGV4dChtZXNzYWdlWzFdLCB0aGlzLmNhbnZhc1dpZHRoLzIsIHRoaXMuY2FudmFzSGVpZ2h0LzIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jdHguZm9udCA9IFwiNDhweCByb2JvdG9cIjtcbiAgICAgICAgdGhpcy5jdHguZmlsbFRleHQobWVzc2FnZSwgdGhpcy5jYW52YXNXaWR0aC8yLCB0aGlzLmNhbnZhc0hlaWdodC8yKTtcbiAgICAgIH1cbiAgICAgIHRoaXMubWVzc2FnZURyYXduID0gdHJ1ZTtcblxuICAgICAgaWYgKHRoaXMuZ2FtZS5nYW1lT3ZlciB8fCB0aGlzLmdhbWUud2luKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlQ29udHJvbEhhbmRsZXJzKCk7XG4gICAgICAgIHRoaXMudXBkYXRlU2NvcmUoKTtcbiAgICAgICAgc2V0VGltZW91dCh0aGlzLmRyYXdSZXRyeUtleS5iaW5kKHRoaXMsIHRoaXMuY3R4KSwgMzAwMClcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgZHJhd1JldHJ5S2V5KCkge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBcIihwcmVzcyBhbnkga2V5IG9yIGNsaWNrIGhlcmUgdG8gcmV0cnkpXCI7XG4gICAgdGhpcy5jdHguZm9udCA9IFwiMjRweCByb2JvdG9cIjtcbiAgICB0aGlzLmN0eC5maWxsVGV4dChtZXNzYWdlLCB0aGlzLmNhbnZhc1dpZHRoLzIsIHRoaXMuY2FudmFzSGVpZ2h0LzIgKyA1MCk7XG4gICAgdGhpcy5iaW5kUmV0cnlIYW5kbGVyKCk7XG4gIH1cblxuICBkcmF3UGF1c2UoKSB7XG4gICAgdGhpcy5jdHgudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcbiAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSBcIndoaXRlXCI7XG4gICAgdGhpcy5jdHguZm9udCA9IFwiNDhweCByb2JvdG9cIjtcbiAgICB0aGlzLmN0eC5maWxsVGV4dChcIlBBVVNFRFwiLCB0aGlzLmNhbnZhc1dpZHRoLzIsIHRoaXMuY2FudmFzSGVpZ2h0LzIpO1xuICB9XG5cbiAgLy8gZHJhdyBtb3ZpbmcgYmFja2dyb3VuZCBhbmQgdGhlbiBhbGwgZ2FtZSBvYmplY3RzXG4gIGRyYXcoKSB7XG4gICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMuY2FudmFzV2lkdGgsIHRoaXMuY2FudmFzSGVpZ2h0KTtcbiAgICB0aGlzLmRyYXdCYWNrZ3JvdW5kKCk7XG5cbiAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5nYW1lLmFsbE1vdmluZ09iamVjdHMpIHtcbiAgICAgIE9iamVjdC52YWx1ZXModGhpcy5nYW1lLmFsbE1vdmluZ09iamVjdHNba2V5XSkuZm9yRWFjaChvYmogPT4gb2JqLmRyYXcodGhpcy5jdHgpKTtcbiAgICB9XG4gIH1cblxuICAvLyBjYW52YXMgYmFja2dyb3VuZCBtb3ZlcyB2ZXJ0aWNhbGx5IGRvd253YXJkXG4gIGRyYXdCYWNrZ3JvdW5kKCkge1xuICAgIGNvbnN0IGltZyA9IHRoaXMuYmdTZXR0aW5ncy5pbWc7XG5cbiAgICAvLyBpZiBlbmQgaXMgcmVhY2hlZCwgcmVzZXQgaW1hZ2UgYmFjayB0byBiZWdpbm5pbmdcbiAgICBpZiAodGhpcy5iZ1NldHRpbmdzLnkgPiB0aGlzLmNhbnZhc0hlaWdodCkge1xuICAgICAgdGhpcy5iZ1NldHRpbmdzLnkgLT0gaW1nLmhlaWdodDtcbiAgICB9XG5cbiAgICAvLyBpZiBsb29waW5nIGFyb3VuZCwgY3V0IHJlbWFpbmluZyBlbmQgYW5kIGRyYXcgYmVsb3cgbmV3XG4gICAgaWYgKHRoaXMuYmdTZXR0aW5ncy55ID4gMCkge1xuICAgICAgdGhpcy5jdHguZHJhd0ltYWdlKGltZywgdGhpcy5iZ1NldHRpbmdzLngsIHRoaXMuYmdTZXR0aW5ncy55IC0gaW1nLmhlaWdodCwgaW1nLndpZHRoLCBpbWcuaGVpZ2h0KTtcbiAgICB9XG5cbiAgICAvLyBkcmF3IGJhY2tncm91bmQgYW5kIHRoZW4gdXBkYXRlIG5ldyBwb3NpdGlvblxuICAgIHRoaXMuY3R4LmRyYXdJbWFnZShpbWcsIHRoaXMuYmdTZXR0aW5ncy54LCB0aGlzLmJnU2V0dGluZ3MueSwgaW1nLndpZHRoLCBpbWcuaGVpZ2h0KTtcbiAgICB0aGlzLmJnU2V0dGluZ3MueSArPSB0aGlzLmJnU2V0dGluZ3MuZHk7XG4gIH1cblxuICAvLyB1cGRhdGVzIGFsbCBnYW1lIGluZm8gcmVsYXRlZCBodG1sIGVsZW1lbnRzXG4gIHVwZGF0ZUdhbWVJbmZvKCkge1xuICAgIHRoaXMudXBkYXRlU2NvcmUoKTtcbiAgICB0aGlzLnVwZGF0ZUhlYWx0aEJhcigncGxheWVyJyk7XG5cbiAgICBpZiAodGhpcy5nYW1lLmJvc3NGaWdodCkge1xuICAgICAgdGhpcy51cGRhdGVIZWFsdGhCYXIoJ2Jvc3MnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy53YXZlU3Bhbi5pbm5lclRleHQgPSB0aGlzLmdhbWUuZW5lbXlXYXZlO1xuICAgICAgdGhpcy5lbmVtaWVzUmVtYWluaW5nU3Bhbi5pbm5lclRleHQgPSB0aGlzLmdhbWUuZW5lbWllc1JlbWFpbmluZztcbiAgICB9XG4gIH1cblxuICB1cGRhdGVTY29yZSgpIHtcbiAgICB0aGlzLnNjb3JlU3Bhbi5pbm5lclRleHQgPSB0aGlzLmdhbWUuc2NvcmU7XG4gIH1cblxuICAvLyB1cGRhdGVzIGVpdGhlciBib3NzIG9yIHBsYXllciBocFxuICAvLyB0eXBlIGlzIGEgc3RyaW5nIG9mIGVpdGhlciAncGxheWVyJyBvciAnYm9zcydcbiAgdXBkYXRlSGVhbHRoQmFyKHR5cGUpIHtcbiAgICBsZXQgb2JqLCBoZWFsdGhCYXI7XG4gICAgaWYgKHR5cGUgPT09ICdwbGF5ZXInKSB7XG4gICAgICBvYmogPSB0aGlzLmdhbWUucGxheWVyO1xuICAgICAgaGVhbHRoQmFyID0gdGhpcy5wbGF5ZXJIZWFsdGhCYXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9iaiA9IHRoaXMuZ2FtZS5ib3NzO1xuICAgICAgaGVhbHRoQmFyID0gdGhpcy5ib3NzSGVhbHRoQmFyO1xuICAgIH1cbiAgICBsZXQgaGVhbHRoID0gb2JqLmhlYWx0aDtcblxuICAgIGNvbnN0IGhlYWx0aFBvaW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgIGhlYWx0aFBvaW50LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIGAke3R5cGV9LWhlYWx0aC1wb2ludGApO1xuXG4gICAgaWYgKHR5cGUgPT09ICdib3NzJykgaGVhbHRoID0gTWF0aC5jZWlsKGhlYWx0aCAvIChCb3NzLk1BWF9IRUFMVEggLyAxMCkpO1xuXG4gICAgaWYgKGhlYWx0aEJhci5jaGlsZHJlbi5sZW5ndGggPCBoZWFsdGgpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaGVhbHRoIC0gaGVhbHRoQmFyLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGhlYWx0aEJhci5hcHBlbmRDaGlsZChoZWFsdGhQb2ludCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICgoaGVhbHRoQmFyLmNoaWxkcmVuLmxlbmd0aCA+IGhlYWx0aCkpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaGVhbHRoQmFyLmNoaWxkcmVuLmxlbmd0aCAtIGhlYWx0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGxhc3RDaGlsZCA9IGhlYWx0aEJhci5sYXN0Q2hpbGQ7XG4gICAgICAgIGlmIChsYXN0Q2hpbGQpIGhlYWx0aEJhci5yZW1vdmVDaGlsZChoZWFsdGhCYXIubGFzdENoaWxkKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBzd2l0Y2hlcyBiZXR3ZWVuIGJvc3MgYW5kIGVuZW15IHdhdmUgaHRtbCBlbGVtZW50cyBcbiAgc3dpdGNoR2FtZUluZm9ybWF0aW9uKCkge1xuICAgIGlmICh0aGlzLmdhbWUuYm9zc0ZpZ2h0KSB7XG4gICAgICB0aGlzLndhdmVJbmZvLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIHRoaXMuYm9zc0luZm8uc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLndhdmVJbmZvLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICAgIHRoaXMuYm9zc0luZm8uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cbiAgfVxuXG4gIC8vIHN0YXJ0IHBsYXlpbmcgdGhlIGdhbWVcbiAgaGFuZGxlU3RhcnRLZXkoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQ/LmtleSA9PT0gXCIgXCIpIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICB0aGlzLmNhbnZhcy5zY3JvbGxJbnRvVmlldygpO1xuICAgIHRoaXMuZ2FtZS5zb3VuZHMuc3dpdGNoQkdNKFwid2F2ZUJHTVwiKTtcbiAgICB0aGlzLmdhbWUuc3RhcnRTY3JlZW4gPSBmYWxzZTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5cHJlc3NcIiwgdGhpcy5zdGFydEhhbmRsZXIpXG4gICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsIHRoaXMuc3RhcnRIYW5kbGVyKVxuICAgIHRoaXMuYmluZENvbnRyb2xIYW5kbGVycygpO1xuICAgIHNldFRpbWVvdXQodGhpcy5nYW1lLnJlc2V0QWRkRW5lbXlDb29sZG93bi5iaW5kKHRoaXMuZ2FtZSksIDE1MDApO1xuICAgIHRoaXMubWVzc2FnZURyYXduID0gZmFsc2U7XG4gIH1cblxuICBiaW5kU3RhcnRIYW5kbGVyKCkge1xuICAgIHRoaXMuc3RhcnRIYW5kbGVyID0gdGhpcy5oYW5kbGVTdGFydEtleS5iaW5kKHRoaXMpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCB0aGlzLnN0YXJ0SGFuZGxlcik7XG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsIHRoaXMuc3RhcnRIYW5kbGVyKTtcbiAgfVxuXG4gIC8vIHJldHJ5IG9uIHdpbi9nYW1lIG92ZXJcbiAgaGFuZGxlUmV0cnlLZXkoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQ/LmtleSA9PT0gXCIgXCIpIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICB0aGlzLmNhbnZhcy5zY3JvbGxJbnRvVmlldygpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCB0aGlzLnJldHJ5SGFuZGxlcik7XG4gICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsIHRoaXMucmV0cnlIYW5kbGVyKTtcbiAgICB0aGlzLmdhbWUucmVzZXQoKTtcbiAgICB0aGlzLmJpbmRDb250cm9sSGFuZGxlcnMoKTtcbiAgICBzZXRUaW1lb3V0KHRoaXMuZ2FtZS5yZXNldEFkZEVuZW15Q29vbGRvd24uYmluZCh0aGlzLmdhbWUpLCAxNTAwKTtcbiAgICB0aGlzLm1lc3NhZ2VEcmF3biA9IGZhbHNlO1xuICB9XG5cbiAgYmluZFJldHJ5SGFuZGxlcigpIHtcbiAgICB0aGlzLnJldHJ5SGFuZGxlciA9IHRoaXMuaGFuZGxlUmV0cnlLZXkuYmluZCh0aGlzKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5cHJlc3NcIiwgdGhpcy5yZXRyeUhhbmRsZXIpO1xuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVyZG93blwiLCB0aGlzLnJldHJ5SGFuZGxlcik7XG4gIH1cblxuICAvLyBtb3VzZS90b3VjaCBmb2xsb3cgbW92ZW1lbnRzXG4gIGhhbmRsZU1vdXNlTW92ZShldmVudCkge1xuICAgIGNvbnN0IHJlY3QgPSB0aGlzLmNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCB4U2NhbGUgPSB0aGlzLmNhbnZhcy53aWR0aCAvIHJlY3Qud2lkdGg7XG4gICAgY29uc3QgeVNjYWxlID0gdGhpcy5jYW52YXMuaGVpZ2h0IC8gcmVjdC5oZWlnaHQ7XG4gICAgY29uc3QgeCA9IChldmVudC5jbGllbnRYIC0gcmVjdC5sZWZ0KSAqIHhTY2FsZTtcbiAgICBjb25zdCB5ID0gKGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcCkgKiB5U2NhbGU7XG4gICAgdGhpcy5tb3VzZVBvc2l0aW9uID0ge3gsIHl9O1xuICB9XG5cbiAgaGFuZGxlTW91c2VPdXQoKSB7XG4gICAgdGhpcy5tb3VzZVBvc2l0aW9uID0gbnVsbDtcbiAgfVxuXG4gIGhhbmRsZU1vdXNlRm9sbG93VG9nZ2xlKCkge1xuICAgIGlmICh0aGlzLm1vdXNlRm9sbG93KSB7XG4gICAgICB0aGlzLnRvdWNoT25FbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICB0aGlzLnRvdWNoT2ZmRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50b3VjaE9uRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgIHRoaXMudG91Y2hPZmZFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfVxuXG4gICAgdGhpcy5tb3VzZUZvbGxvdyA9ICF0aGlzLm1vdXNlRm9sbG93O1xuICB9XG5cbiAgLy8gcGF1c2UvdW5wYXVzZVxuICBoYW5kbGVQYXVzZVRvZ2dsZSgpIHtcbiAgICBpZiAoKHRoaXMuZ2FtZS5zdGFydFNjcmVlbiB8fCB0aGlzLmdhbWUuZ2FtZU92ZXIgfHwgdGhpcy5nYW1lLndpbikgJiYgIXRoaXMucGF1c2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wYXVzZSkge1xuICAgICAgdGhpcy5nYW1lLnJlc3VtZVRpbWVycygpO1xuICAgICAgdGhpcy5wYXVzZU9uRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgdGhpcy5wYXVzZU9mZkVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICB0aGlzLnBhdXNlVGV4dC5pbm5lclRleHQgPSAncGF1c2UnO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmdhbWUucGF1c2VUaW1lcnMoKTtcbiAgICAgIHRoaXMucGF1c2VPbkVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICB0aGlzLnBhdXNlT2ZmRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgdGhpcy5wYXVzZVRleHQuaW5uZXJUZXh0ID0gJ3BsYXknO1xuICAgICAgdGhpcy5kcmF3UGF1c2UoKTtcbiAgICB9XG5cbiAgICB0aGlzLnBhdXNlID0gIXRoaXMucGF1c2U7XG4gIH1cblxuICAvLyBwYXVzZSBhbmQgbXV0ZSB3aGVuIHRhYmJlZCBvdXQgb3IgZ2FtZSBpcyBvdXQgb2YgZm9jdXNcbiAgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSgpIHtcbiAgICBpZiAoXG4gICAgICBkb2N1bWVudC5oaWRkZW4gJiYgXG4gICAgICAhKHRoaXMuZ2FtZS5zdGFydFNjcmVlbiB8fCB0aGlzLmdhbWUuZ2FtZU92ZXIgfHwgdGhpcy5nYW1lLndpbikgJiYgXG4gICAgICAhdGhpcy5wYXVzZVxuICAgICkge1xuICAgICAgdGhpcy5oYW5kbGVQYXVzZVRvZ2dsZSgpO1xuICAgIH1cblxuICAgIGlmIChkb2N1bWVudC5oaWRkZW4gJiYgdGhpcy5nYW1lLnNvdW5kcy50b2dnbGUpIHtcbiAgICAgIHRoaXMuZ2FtZS5zb3VuZHMuaGFuZGxlU291bmRUb2dnbGUoKTtcbiAgICAgIHRoaXMudG9nZ2xlU291bmQgPSB0cnVlO1xuICAgIH0gZWxzZSBpZiAoIWRvY3VtZW50LmhpZGRlbiAmJiB0aGlzLnRvZ2dsZVNvdW5kKSB7XG4gICAgICB0aGlzLmdhbWUuc291bmRzLmhhbmRsZVNvdW5kVG9nZ2xlKCk7XG4gICAgICB0aGlzLnRvZ2dsZVNvdW5kID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLy8gc2V0dGluZyBvcHRpb24ga2V5YmluZHNcbiAgaGFuZGxlU2V0dGluZ0tleWJpbmRzKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gXCJtXCIpIHRoaXMuaGFuZGxlTW91c2VGb2xsb3dUb2dnbGUoKTtcbiAgICBlbHNlIGlmIChldmVudC5rZXkgPT09IFwia1wiKSB0aGlzLmdhbWUuc291bmRzLmhhbmRsZVNvdW5kVG9nZ2xlKCk7XG4gICAgZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcInBcIikgdGhpcy5oYW5kbGVQYXVzZVRvZ2dsZSgpO1xuICB9XG5cbiAgLy8gcGxheWVyIGNvbnRyb2xzIChhcnJvdy93YXNkIHRvIG1vdmUsIHNwYWNlYmFyIHRvIHNob290KVxuICBoYW5kbGVLZXlEb3duKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGlmIChHYW1lVmlldy5SSUdIVF9LRVlTLmluY2x1ZGVzKGV2ZW50LmtleSkpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQucmlnaHQgPSB0cnVlO1xuICAgIGVsc2UgaWYgKEdhbWVWaWV3LkxFRlRfS0VZUy5pbmNsdWRlcyhldmVudC5rZXkpKSB0aGlzLmdhbWUucGxheWVyLmtleXNQcmVzc2VkLmxlZnQgPSB0cnVlO1xuICAgIGVsc2UgaWYgKEdhbWVWaWV3LlVQX0tFWVMuaW5jbHVkZXMoZXZlbnQua2V5KSkgdGhpcy5nYW1lLnBsYXllci5rZXlzUHJlc3NlZC51cCA9IHRydWU7XG4gICAgZWxzZSBpZiAoR2FtZVZpZXcuRE9XTl9LRVlTLmluY2x1ZGVzKGV2ZW50LmtleSkpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQuZG93biA9IHRydWU7XG4gICAgZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcIiBcIikgdGhpcy5nYW1lLnBsYXllci5rZXlzUHJlc3NlZC5zaG9vdCA9IHRydWU7XG4gIH1cbiAgXG4gIGhhbmRsZUtleVVwKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGlmIChHYW1lVmlldy5SSUdIVF9LRVlTLmluY2x1ZGVzKGV2ZW50LmtleSkpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQucmlnaHQgPSBmYWxzZTtcbiAgICBlbHNlIGlmIChHYW1lVmlldy5MRUZUX0tFWVMuaW5jbHVkZXMoZXZlbnQua2V5KSkgdGhpcy5nYW1lLnBsYXllci5rZXlzUHJlc3NlZC5sZWZ0ID0gZmFsc2U7XG4gICAgZWxzZSBpZiAoR2FtZVZpZXcuVVBfS0VZUy5pbmNsdWRlcyhldmVudC5rZXkpKSB0aGlzLmdhbWUucGxheWVyLmtleXNQcmVzc2VkLnVwID0gZmFsc2U7XG4gICAgZWxzZSBpZiAoR2FtZVZpZXcuRE9XTl9LRVlTLmluY2x1ZGVzKGV2ZW50LmtleSkpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQuZG93biA9IGZhbHNlO1xuICAgIGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gXCIgXCIpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQuc2hvb3QgPSBmYWxzZTtcbiAgfVxuXG4gIC8vIG1vdXNlIGNsaWNrL2hvbGQgdG8gc2hvb3RcbiAgaGFuZGxlTW91c2VEb3duKGV2ZW50KSB7XG4gICAgY29uc3QgcGFyZW50SWQgPSBldmVudC50YXJnZXQucGFyZW50Tm9kZS5pZDtcbiAgICBpZiAoIUdhbWVWaWV3LklHTk9SRV9UQVJHRVRTLmluY2x1ZGVzKHBhcmVudElkKSkgdGhpcy5nYW1lLnBsYXllci5rZXlzUHJlc3NlZC5zaG9vdCA9IHRydWU7XG4gIH1cblxuICBoYW5kbGVNb3VzZVVwKCkge1xuICAgIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQuc2hvb3QgPSBmYWxzZTtcbiAgfVxuXG4gIC8vIGJpbmRpbmcgYW5kIHJlbW92aW5nIHBsYXllciBjb250cm9sc1xuICBiaW5kQ29udHJvbEhhbmRsZXJzKCkge1xuICAgIHRoaXMua2V5RG93bkhhbmRsZXIgPSB0aGlzLmhhbmRsZUtleURvd24uYmluZCh0aGlzKTtcbiAgICB0aGlzLmtleVVwSGFuZGxlciA9IHRoaXMuaGFuZGxlS2V5VXAuYmluZCh0aGlzKTtcbiAgICB0aGlzLm1vdXNlRG93bkhhbmRsZXIgPSB0aGlzLmhhbmRsZU1vdXNlRG93bi5iaW5kKHRoaXMpO1xuICAgIHRoaXMubW91c2VVcEhhbmRsZXIgPSB0aGlzLmhhbmRsZU1vdXNlVXAuYmluZCh0aGlzKTtcbiAgICB0aGlzLm1vdXNlTW92ZUhhbmRsZXIgPSB0aGlzLmhhbmRsZU1vdXNlTW92ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMubW91c2VPdXRIYW5kbGVyID0gdGhpcy5oYW5kbGVNb3VzZU91dC5iaW5kKHRoaXMpO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5rZXlEb3duSGFuZGxlcik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMua2V5VXBIYW5kbGVyKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIiwgdGhpcy5tb3VzZURvd25IYW5kbGVyKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsIHRoaXMubW91c2VVcEhhbmRsZXIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVybW92ZVwiLCB0aGlzLm1vdXNlTW92ZUhhbmRsZXIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVyb3V0XCIsIHRoaXMubW91c2VPdXRIYW5kbGVyKTtcbiAgfVxuXG4gIHJlbW92ZUNvbnRyb2xIYW5kbGVycygpIHtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLmtleURvd25IYW5kbGVyKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgdGhpcy5rZXlVcEhhbmRsZXIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVyZG93blwiLCB0aGlzLm1vdXNlRG93bkhhbmRsZXIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIiwgdGhpcy5tb3VzZVVwSGFuZGxlcik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJtb3ZlXCIsIHRoaXMubW91c2VNb3ZlSGFuZGxlcik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJvdXRcIiwgdGhpcy5tb3VzZU91dEhhbmRsZXIpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEdhbWVWaWV3OyJdLCJuYW1lcyI6WyJHYW1lIiwiQm9zcyIsIkdhbWVWaWV3IiwiY29uc3RydWN0b3IiLCJjYW52YXMiLCJjYW52YXNDb250ZXh0IiwiY3R4IiwiY2FudmFzV2lkdGgiLCJ3aWR0aCIsImNhbnZhc0hlaWdodCIsImhlaWdodCIsImdhbWUiLCJzY29yZVNwYW4iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicGxheWVySGVhbHRoQmFyIiwiYm9zc0hlYWx0aEJhciIsImJvc3NJbmZvIiwid2F2ZUluZm8iLCJ3YXZlU3BhbiIsImVuZW1pZXNSZW1haW5pbmdTcGFuIiwiYmFja2dyb3VuZEltZyIsIkltYWdlIiwic3JjIiwiYmdTZXR0aW5ncyIsImltZyIsIngiLCJ5IiwiZHkiLCJ0b3VjaE9uRWxlbWVudCIsInRvdWNoT2ZmRWxlbWVudCIsIm1vdXNlRm9sbG93IiwibW91c2VQb3NpdGlvbiIsInBhdXNlT25FbGVtZW50IiwicGF1c2VPZmZFbGVtZW50IiwicGF1c2VUZXh0IiwicGF1c2UiLCJ0b2dnbGVTb3VuZCIsIm1lc3NhZ2VEcmF3biIsImJpbmRTdGFydEhhbmRsZXIiLCJzdGFydCIsImxhc3RUaW1lIiwiZHJhd0JhY2tncm91bmQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJhbmltYXRlIiwiYmluZCIsInRpbWUiLCJzdGFydFNjcmVlbiIsImdhbWVPdmVyIiwid2luIiwiaGFuZGxlUGF1c2VUb2dnbGUiLCJkcmF3U3RhcnRXaW5HYW1lT3ZlciIsImRyYXciLCJ1cGRhdGVHYW1lSW5mbyIsInRpbWVEZWx0YSIsInN0ZXAiLCJtZXNzYWdlIiwic2VjcmV0RW5kIiwidGV4dEFsaWduIiwiZmlsbFN0eWxlIiwiZm9udCIsImZpbGxUZXh0IiwicmVtb3ZlQ29udHJvbEhhbmRsZXJzIiwidXBkYXRlU2NvcmUiLCJzZXRUaW1lb3V0IiwiZHJhd1JldHJ5S2V5IiwiYmluZFJldHJ5SGFuZGxlciIsImRyYXdQYXVzZSIsImNsZWFyUmVjdCIsImtleSIsImFsbE1vdmluZ09iamVjdHMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJmb3JFYWNoIiwib2JqIiwiZHJhd0ltYWdlIiwidXBkYXRlSGVhbHRoQmFyIiwiYm9zc0ZpZ2h0IiwiaW5uZXJUZXh0IiwiZW5lbXlXYXZlIiwiZW5lbWllc1JlbWFpbmluZyIsInNjb3JlIiwidHlwZSIsImhlYWx0aEJhciIsInBsYXllciIsImJvc3MiLCJoZWFsdGgiLCJoZWFsdGhQb2ludCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJNYXRoIiwiY2VpbCIsIk1BWF9IRUFMVEgiLCJjaGlsZHJlbiIsImxlbmd0aCIsImkiLCJhcHBlbmRDaGlsZCIsImxhc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwic3dpdGNoR2FtZUluZm9ybWF0aW9uIiwic3R5bGUiLCJkaXNwbGF5IiwiaGFuZGxlU3RhcnRLZXkiLCJldmVudCIsInByZXZlbnREZWZhdWx0Iiwic2Nyb2xsSW50b1ZpZXciLCJzb3VuZHMiLCJzd2l0Y2hCR00iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic3RhcnRIYW5kbGVyIiwiYmluZENvbnRyb2xIYW5kbGVycyIsInJlc2V0QWRkRW5lbXlDb29sZG93biIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVSZXRyeUtleSIsInJldHJ5SGFuZGxlciIsInJlc2V0IiwiaGFuZGxlTW91c2VNb3ZlIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInhTY2FsZSIsInlTY2FsZSIsImNsaWVudFgiLCJsZWZ0IiwiY2xpZW50WSIsInRvcCIsImhhbmRsZU1vdXNlT3V0IiwiaGFuZGxlTW91c2VGb2xsb3dUb2dnbGUiLCJyZXN1bWVUaW1lcnMiLCJwYXVzZVRpbWVycyIsImhhbmRsZVZpc2liaWxpdHlDaGFuZ2UiLCJoaWRkZW4iLCJ0b2dnbGUiLCJoYW5kbGVTb3VuZFRvZ2dsZSIsImhhbmRsZVNldHRpbmdLZXliaW5kcyIsImhhbmRsZUtleURvd24iLCJSSUdIVF9LRVlTIiwiaW5jbHVkZXMiLCJrZXlzUHJlc3NlZCIsInJpZ2h0IiwiTEVGVF9LRVlTIiwiVVBfS0VZUyIsInVwIiwiRE9XTl9LRVlTIiwiZG93biIsInNob290IiwiaGFuZGxlS2V5VXAiLCJoYW5kbGVNb3VzZURvd24iLCJwYXJlbnRJZCIsInRhcmdldCIsInBhcmVudE5vZGUiLCJpZCIsIklHTk9SRV9UQVJHRVRTIiwiaGFuZGxlTW91c2VVcCIsImtleURvd25IYW5kbGVyIiwia2V5VXBIYW5kbGVyIiwibW91c2VEb3duSGFuZGxlciIsIm1vdXNlVXBIYW5kbGVyIiwibW91c2VNb3ZlSGFuZGxlciIsIm1vdXNlT3V0SGFuZGxlciIsIl9kZWZpbmVQcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/moving_object.js":
/*!**************************************!*\
  !*** ./src/scripts/moving_object.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// MovingObject is the top parent class for ships, projectiles, explosions, etc.\n\n\nclass MovingObject {\n  // for smoothing gameplay based on fps\n\n  // takes in an argument object with the following:\n  constructor(argsObject) {\n    this.position = argsObject[\"position\"]; // initial canvas position [int, int]\n    this.velocity = argsObject[\"velocity\"]; // initial velocity [int, int]\n    this.speed = argsObject[\"speed\"]; // initial speed\n    this.health = argsObject[\"health\"]; // initial health\n    this.game = argsObject[\"game\"]; // Game object\n    this.width = argsObject[\"width\"]; // image width\n    this.height = argsObject[\"height\"]; // image height\n    this.image = argsObject[\"image\"]; // image url\n    this.type = argsObject[\"type\"]; // type can be 'enemy', 'boss', 'player', or 'explosion'\n    this.rotationAngle = argsObject[\"rotation\"] || 0; // (optional) image rotation angle in degrees\n\n    // stores itself in the Game with an id\n    this.id = this.game.idCounter++;\n    this.game.allMovingObjects[this.type][this.id] = this;\n  }\n  draw(ctx) {\n    // ctx.drawImage(this.image, this.position[0], this.position[1], this.width, this.height);\n\n    // rotate from center\n    const [x, y] = this.position;\n    const [centerX, centerY] = [x + this.width / 2, y + this.height / 2];\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(Math.PI / 180 * this.rotationAngle);\n    ctx.translate(-centerX, -centerY);\n    ctx.drawImage(this.image, x, y, this.width, this.height);\n    ctx.restore();\n  }\n\n  // checks collisions against all hitboxes of the other MovingObject\n  collideCheck(otherObj) {\n    // hitBoxCollisions is used by subclasses with more complex logic\n    const hitBoxCollisions = [];\n    this.getHitbox().forEach((thisBox, idx) => {\n      const collisionFound = otherObj.getHitbox().some(otherBox => {\n        // rectangleCollision is a utility function for mathematically determining collisions\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.rectangleCollision)(thisBox, otherBox);\n      });\n      if (collisionFound) hitBoxCollisions.push(idx);\n    });\n    if (hitBoxCollisions.length > 0) {\n      this.handleCollided(otherObj, hitBoxCollisions);\n    }\n  }\n\n  // will be overwritten by subclasses with more complex logic\n  handleCollided(otherObj) {\n    const otherObjClass = otherObj.constructor.name;\n\n    // three cases: ship to projectile, player to enemy, player to boss\n    if (otherObjClass === \"Projectile\") {\n      const damage = otherObj.health;\n      otherObj.remove();\n      this.damageTaken(damage);\n    } else if (otherObjClass === \"EnemyShip\") {\n      const damage = 1;\n      this.damageTaken(damage);\n    } else if (otherObjClass === \"Boss\") {\n      const damage = 3;\n      this.damageTaken(damage);\n    }\n  }\n  getHitbox() {\n    const [x, y] = this.position;\n    const width = this.width;\n    const height = this.height;\n    return [{\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }];\n  }\n\n  // movement is smoothed out during fps changes\n  move(timeDelta) {\n    this.updateVelocity();\n    const velocityScale = timeDelta / MovingObject.NORMAL_FRAME_TIME_DELTA;\n    const offsetX = this.velocity[0] * velocityScale;\n    const offsetY = this.velocity[1] * velocityScale;\n    const newX = this.position[0] + offsetX;\n    const newY = this.position[1] + offsetY;\n    this.handleBounds([newX, newY]);\n  }\n\n  // updates the position with a new [int, int]\n  handleBounds(newPosition) {\n    // to be changed in sub classes as needed\n    this.position = newPosition;\n  }\n  updateVelocity() {\n    // to be implemented in sub classes as needed\n  }\n\n  // these functions take in a y position as int\n  inUpperYHeightBounds(y) {\n    return y <= this.game.canvasHeight + this.height;\n  }\n  inUpperYBounds(y) {\n    return y >= 0;\n  }\n  inLowerYBounds(y) {\n    return y <= this.game.canvasHeight - this.height;\n  }\n  inYBounds(y) {\n    return this.inUpperYBounds(y) && this.inLowerYBounds(y);\n  }\n\n  // these functions take in a x position as int\n  inUpperXBounds(x) {\n    return x >= 0;\n  }\n  inLowerXBounds(x) {\n    return x <= this.game.canvasWidth - this.width;\n  }\n  inXBounds(x) {\n    return this.inUpperXBounds(x) && this.inLowerXBounds(x);\n  }\n\n  // takes in a position as [int, int]\n  inBounds(position) {\n    return this.inXBounds(position[0]) && this.inYBounds(position[1]);\n  }\n  remove() {\n    delete this.game.allMovingObjects[this.type][this.id];\n  }\n}\n_defineProperty(MovingObject, \"NORMAL_FRAME_TIME_DELTA\", 1000 / 60);\n/* harmony default export */ __webpack_exports__[\"default\"] = (MovingObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/moving_object.js\n");

/***/ }),

/***/ "./src/scripts/player_ship.js":
/*!************************************!*\
  !*** ./src/scripts/player_ship.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// The player, aka the Galactic Defender\n\n\n\n\n\nclass PlayerShip extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(game) {\n    // Ship/MovingObject related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/player1.png\";\n    let height = 48;\n    let width = 37;\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [Math.floor(game.canvasWidth / 2), game.canvasHeight - height],\n      velocity: [0, 0],\n      speed: PlayerShip.SPEED,\n      health: PlayerShip.MAX_HEALTH,\n      game: game,\n      image: image,\n      type: \"player\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/player_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, -10],\n        speed: 10,\n        health: 1,\n        game: game,\n        width: 5,\n        height: 20,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"player\",\n      projectileSound: \"playerProjectile\"\n    }];\n\n    // projectile pattern\n    const patternArgs = [{\n      positionDeltas: [[width / 2.3, 0]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: 250,\n      onCooldown: false,\n      timer: null,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n\n    // player controlled movements\n    this.keysPressed = {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n      shoot: false\n    };\n    this.disabled = false;\n    this.invincible = false;\n  }\n\n  // player ship unique hitboxes\n  getHitbox() {\n    const box1 = {\n      x: this.position[0] + this.width / 3,\n      y: this.position[1],\n      width: this.width / 3,\n      height: this.height\n    };\n    const box2 = {\n      x: this.position[0],\n      y: this.position[1] + this.height * .65,\n      width: this.width,\n      height: this.height / 5\n    };\n    return [box1, box2];\n  }\n\n  // velocity updated based on player controlled movements\n  updateVelocity() {\n    let newVelocity = [0, 0];\n\n    // when disabled, player auto moves downwards\n    if (this.disabled) {\n      newVelocity[1] = 2;\n    } else if (this.game.gameView.mouseFollow && this.game.gameView.mousePosition) {\n      // mouse/touch controlled movement handling\n      // movement is smoothed out for finer controls\n      const xDiff = this.game.gameView.mousePosition.x - (this.position[0] + this.width / 2);\n      const yDiff = this.game.gameView.mousePosition.y - (this.position[1] + this.height / 2);\n      const deadzone = 2;\n      if (xDiff > deadzone) {\n        newVelocity[0] += Math.min(this.speed, xDiff);\n      } else if (xDiff < -deadzone) {\n        newVelocity[0] -= Math.min(this.speed, -xDiff);\n      }\n      if (yDiff > deadzone) {\n        newVelocity[1] += Math.min(this.speed, yDiff);\n      } else if (yDiff < -deadzone) {\n        newVelocity[1] -= Math.min(this.speed, -yDiff);\n      }\n      if (newVelocity[0] && newVelocity[1]) {\n        const speed = (Math.abs(newVelocity[0]) + Math.abs(newVelocity[1])) / 2;\n        newVelocity = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.vectorScale)(newVelocity, speed);\n      }\n    } else {\n      // keyboard controlled movement handling\n      if (this.keysPressed.right) newVelocity[0] += this.speed;\n      if (this.keysPressed.left) newVelocity[0] -= this.speed;\n      if (this.keysPressed.up) newVelocity[1] -= this.speed;\n      if (this.keysPressed.down) newVelocity[1] += this.speed;\n      if (newVelocity[0] && newVelocity[1]) newVelocity = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.vectorScale)(newVelocity, this.speed);\n    }\n    this.velocity = newVelocity;\n  }\n\n  // shooting also controlled by player\n  shootProjectile() {\n    if (this.keysPressed.shoot && !this.disabled) super.shootProjectile();\n  }\n\n  // player must be within game screen at all times\n  handleBounds(newPosition) {\n    if (this.inXBounds(newPosition[0])) this.position[0] = newPosition[0];\n    if (this.inYBounds(newPosition[1])) this.position[1] = newPosition[1];\n  }\n\n  // player gets 1 sec of invicibility after taking damage\n  damageTaken(damage) {\n    if (!this.invincible && this.health >= 0) {\n      super.damageTaken(damage);\n      this.invincible = true;\n      this.game.sounds.add(\"playerHurt\");\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.resetInvincibility.bind(this), 1000);\n    }\n  }\n  resetInvincibility() {\n    this.invincible = false;\n  }\n\n  // player unique death animation, and activates game over logic\n  remove() {\n    if (!this.disabled) {\n      this.disabled = true;\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n        const posX = this.position[0] - 40;\n        const posY = this.position[1] - 20;\n        new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 100, [posX, posY], \"major\", [0, 0]);\n        super.remove();\n        this.game.sounds.playMajorSound(\"playerDeath\");\n        new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.game.setGameOver.bind(this.game), 3000);\n      }, 1000);\n    }\n  }\n}\n_defineProperty(PlayerShip, \"SPEED\", 5);\n_defineProperty(PlayerShip, \"MAX_HEALTH\", 10);\n/* harmony default export */ __webpack_exports__[\"default\"] = (PlayerShip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player_ship.js\n");

/***/ }),

/***/ "./src/scripts/projectile.js":
/*!***********************************!*\
  !*** ./src/scripts/projectile.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n// Top level class for all projectiles shot from ships\n\n\nclass Projectile extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // args contains MovingObject args and an origin\n  constructor(args) {\n    // Projectile health determines damage dealt\n    args.objArgs.type = \"projectiles\";\n    super(args.objArgs);\n    this.origin = args.origin; // a string of either 'player' or 'enemy'\n  }\n\n  // projectiles are also removed when they collide with ships, handled by Ship objects\n  handleBounds(newPosition) {\n    if (!this.inBounds(newPosition)) {\n      super.remove();\n    } else {\n      this.position = newPosition;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Projectile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wcm9qZWN0aWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRTJDO0FBRTNDLE1BQU1DLFVBQVUsU0FBU0Qsc0RBQVksQ0FBQztFQUNwQztFQUNBRSxXQUFXQSxDQUFDQyxJQUFJLEVBQUU7SUFDaEI7SUFDQUEsSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksR0FBRyxhQUFhO0lBQ2pDLEtBQUssQ0FBQ0YsSUFBSSxDQUFDQyxPQUFPLENBQUM7SUFDbkIsSUFBSSxDQUFDRSxNQUFNLEdBQUdILElBQUksQ0FBQ0csTUFBTSxDQUFDLENBQUU7RUFDOUI7O0VBRUE7RUFDQUMsWUFBWUEsQ0FBQ0MsV0FBVyxFQUFFO0lBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0QsV0FBVyxDQUFDLEVBQUU7TUFDL0IsS0FBSyxDQUFDRSxNQUFNLEVBQUU7SUFDaEIsQ0FBQyxNQUFNO01BQ0wsSUFBSSxDQUFDQyxRQUFRLEdBQUdILFdBQVc7SUFDN0I7RUFDRjtBQUNGO0FBRUEsK0RBQWVQLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvc2NyaXB0cy9wcm9qZWN0aWxlLmpzP2ZmNTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVG9wIGxldmVsIGNsYXNzIGZvciBhbGwgcHJvamVjdGlsZXMgc2hvdCBmcm9tIHNoaXBzXG5cbmltcG9ydCBNb3ZpbmdPYmplY3QgZnJvbSBcIi4vbW92aW5nX29iamVjdFwiO1xuXG5jbGFzcyBQcm9qZWN0aWxlIGV4dGVuZHMgTW92aW5nT2JqZWN0IHtcbiAgLy8gYXJncyBjb250YWlucyBNb3ZpbmdPYmplY3QgYXJncyBhbmQgYW4gb3JpZ2luXG4gIGNvbnN0cnVjdG9yKGFyZ3MpIHtcbiAgICAvLyBQcm9qZWN0aWxlIGhlYWx0aCBkZXRlcm1pbmVzIGRhbWFnZSBkZWFsdFxuICAgIGFyZ3Mub2JqQXJncy50eXBlID0gXCJwcm9qZWN0aWxlc1wiO1xuICAgIHN1cGVyKGFyZ3Mub2JqQXJncyk7XG4gICAgdGhpcy5vcmlnaW4gPSBhcmdzLm9yaWdpbjsgIC8vIGEgc3RyaW5nIG9mIGVpdGhlciAncGxheWVyJyBvciAnZW5lbXknXG4gIH1cblxuICAvLyBwcm9qZWN0aWxlcyBhcmUgYWxzbyByZW1vdmVkIHdoZW4gdGhleSBjb2xsaWRlIHdpdGggc2hpcHMsIGhhbmRsZWQgYnkgU2hpcCBvYmplY3RzXG4gIGhhbmRsZUJvdW5kcyhuZXdQb3NpdGlvbikge1xuICAgIGlmICghdGhpcy5pbkJvdW5kcyhuZXdQb3NpdGlvbikpIHtcbiAgICAgIHN1cGVyLnJlbW92ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnBvc2l0aW9uID0gbmV3UG9zaXRpb25cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvamVjdGlsZTsiXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwiUHJvamVjdGlsZSIsImNvbnN0cnVjdG9yIiwiYXJncyIsIm9iakFyZ3MiLCJ0eXBlIiwib3JpZ2luIiwiaGFuZGxlQm91bmRzIiwibmV3UG9zaXRpb24iLCJpbkJvdW5kcyIsInJlbW92ZSIsInBvc2l0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/projectile.js\n");

/***/ }),

/***/ "./src/scripts/ship.js":
/*!*****************************!*\
  !*** ./src/scripts/ship.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projectile */ \"./src/scripts/projectile.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n// Ship is the top parent class for player, enemy, and boss ships\n\n\n\n\nclass Ship extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // takes in constructor argument objects for MovingObject and Projectile\n  // and takes in an array of shooting pattern objects\n  constructor(objArgs, projectileArgs, patternArgs) {\n    super(objArgs);\n    this.projectileArgs = projectileArgs;\n    this.patternArgs = patternArgs;\n  }\n\n  // ships can have multiple projectile patterns and possible batch firing\n  // each pattern has it's own cooldown\n  shootProjectile() {\n    this.patternArgs.forEach((pattern, idx) => {\n      // fire pattern if off cooldown and ship in game bounds\n      if (!pattern.onCooldown && this.inBounds(this.position)) {\n        // batch firing\n        for (let i = 0; i < pattern.batchFireNum; i++) {\n          new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n            // only fire if ship still alive when timer callback activates\n            if (this.health > 0) {\n              // create new Projectile at each position in the pattern\n              pattern.positionDeltas.forEach(delta => {\n                const [x, y] = this.position;\n                const [dx, dy] = delta;\n                const startPosition = [x + dx, y + dy];\n                const projArgs = this.projectileArgs[pattern.projectileArgIndex];\n                projArgs.objArgs.position = startPosition;\n                new _projectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"](projArgs);\n              });\n            }\n          }, pattern.batchFireInterval * i);\n        }\n\n        // play projectile sound\n        const projSound = this.projectileArgs[pattern.projectileArgIndex].projectileSound;\n        this.playShootSound(projSound);\n\n        // set cooldown and start timer to reset it\n        pattern.onCooldown = true;\n        const batchCooldownOffset = pattern.batchFireInterval * pattern.batchFireNum;\n        pattern.timer = new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.resetCooldown.bind(this, idx), pattern.cooldown + batchCooldownOffset);\n      }\n    });\n  }\n\n  // projectileSound is a string of either 'playerProjectile', 'bossProjectile', or 'enemyProjectile'\n  playShootSound(projectileSound) {\n    this.game.sounds.add(projectileSound);\n  }\n\n  // takes in an index for the shooting patterns array\n  resetCooldown(index) {\n    this.patternArgs[index].onCooldown = false;\n    this.patternArgs[index].timer = null;\n  }\n  damageTaken(damage) {\n    this.health -= damage;\n    if (this.health <= 0) this.remove();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ship);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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STtFQUN0QztFQUVBTyxXQUFXQSxDQUFDQyxNQUFNLEVBQUU7SUFDbEIsSUFBSSxDQUFDdkIsTUFBTSxJQUFJdUIsTUFBTTtJQUNyQixJQUFJLElBQUksQ0FBQ3ZCLE1BQU0sSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDd0IsTUFBTSxFQUFFO0VBQ3JDO0FBQ0Y7QUFFQSwrREFBZXZDLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvc2NyaXB0cy9zaGlwLmpzPzU1MDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2hpcCBpcyB0aGUgdG9wIHBhcmVudCBjbGFzcyBmb3IgcGxheWVyLCBlbmVteSwgYW5kIGJvc3Mgc2hpcHNcblxuaW1wb3J0IE1vdmluZ09iamVjdCBmcm9tIFwiLi9tb3Zpbmdfb2JqZWN0XCI7XG5pbXBvcnQgUHJvamVjdGlsZSBmcm9tIFwiLi9wcm9qZWN0aWxlXCI7XG5pbXBvcnQgVGltZXIgZnJvbSBcIi4vdGltZXJcIjtcblxuY2xhc3MgU2hpcCBleHRlbmRzIE1vdmluZ09iamVjdCB7XG4gIC8vIHRha2VzIGluIGNvbnN0cnVjdG9yIGFyZ3VtZW50IG9iamVjdHMgZm9yIE1vdmluZ09iamVjdCBhbmQgUHJvamVjdGlsZVxuICAvLyBhbmQgdGFrZXMgaW4gYW4gYXJyYXkgb2Ygc2hvb3RpbmcgcGF0dGVybiBvYmplY3RzXG4gIGNvbnN0cnVjdG9yKG9iakFyZ3MsIHByb2plY3RpbGVBcmdzLCBwYXR0ZXJuQXJncykge1xuICAgIHN1cGVyKG9iakFyZ3MpO1xuICAgIHRoaXMucHJvamVjdGlsZUFyZ3MgPSBwcm9qZWN0aWxlQXJncztcbiAgICB0aGlzLnBhdHRlcm5BcmdzID0gcGF0dGVybkFyZ3M7XG4gIH1cblxuICAvLyBzaGlwcyBjYW4gaGF2ZSBtdWx0aXBsZSBwcm9qZWN0aWxlIHBhdHRlcm5zIGFuZCBwb3NzaWJsZSBiYXRjaCBmaXJpbmdcbiAgLy8gZWFjaCBwYXR0ZXJuIGhhcyBpdCdzIG93biBjb29sZG93blxuICBzaG9vdFByb2plY3RpbGUoKSB7XG4gICAgdGhpcy5wYXR0ZXJuQXJncy5mb3JFYWNoKChwYXR0ZXJuLCBpZHgpID0+IHtcbiAgICAgIC8vIGZpcmUgcGF0dGVybiBpZiBvZmYgY29vbGRvd24gYW5kIHNoaXAgaW4gZ2FtZSBib3VuZHNcbiAgICAgIGlmICghcGF0dGVybi5vbkNvb2xkb3duICYmIHRoaXMuaW5Cb3VuZHModGhpcy5wb3NpdGlvbikpIHtcbiAgICAgICAgLy8gYmF0Y2ggZmlyaW5nXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGF0dGVybi5iYXRjaEZpcmVOdW07IGkgKyspIHtcbiAgICAgICAgICBuZXcgVGltZXIodGhpcy5nYW1lLCAoKSA9PiB7XG4gICAgICAgICAgICAvLyBvbmx5IGZpcmUgaWYgc2hpcCBzdGlsbCBhbGl2ZSB3aGVuIHRpbWVyIGNhbGxiYWNrIGFjdGl2YXRlc1xuICAgICAgICAgICAgaWYgKHRoaXMuaGVhbHRoID4gMCkge1xuICAgICAgICAgICAgICAvLyBjcmVhdGUgbmV3IFByb2plY3RpbGUgYXQgZWFjaCBwb3NpdGlvbiBpbiB0aGUgcGF0dGVyblxuICAgICAgICAgICAgICBwYXR0ZXJuLnBvc2l0aW9uRGVsdGFzLmZvckVhY2goZGVsdGEgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IFt4LCB5XSA9IHRoaXMucG9zaXRpb247XG4gICAgICAgICAgICAgICAgY29uc3QgW2R4LCBkeV0gPSBkZWx0YTtcbiAgICAgICAgICAgICAgICBjb25zdCBzdGFydFBvc2l0aW9uID0gW3ggKyBkeCwgeSArIGR5XTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IHByb2pBcmdzID0gdGhpcy5wcm9qZWN0aWxlQXJnc1twYXR0ZXJuLnByb2plY3RpbGVBcmdJbmRleF07XG4gICAgICAgICAgICAgICAgcHJvakFyZ3Mub2JqQXJncy5wb3NpdGlvbiA9IHN0YXJ0UG9zaXRpb247XG5cbiAgICAgICAgICAgICAgICBuZXcgUHJvamVjdGlsZShwcm9qQXJncyk7XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSwgcGF0dGVybi5iYXRjaEZpcmVJbnRlcnZhbCAqIGkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcGxheSBwcm9qZWN0aWxlIHNvdW5kXG4gICAgICAgIGNvbnN0IHByb2pTb3VuZCA9IHRoaXMucHJvamVjdGlsZUFyZ3NbcGF0dGVybi5wcm9qZWN0aWxlQXJnSW5kZXhdLnByb2plY3RpbGVTb3VuZDtcbiAgICAgICAgdGhpcy5wbGF5U2hvb3RTb3VuZChwcm9qU291bmQpO1xuICAgICAgICBcbiAgICAgICAgLy8gc2V0IGNvb2xkb3duIGFuZCBzdGFydCB0aW1lciB0byByZXNldCBpdFxuICAgICAgICBwYXR0ZXJuLm9uQ29vbGRvd24gPSB0cnVlO1xuICAgICAgICBjb25zdCBiYXRjaENvb2xkb3duT2Zmc2V0ID0gcGF0dGVybi5iYXRjaEZpcmVJbnRlcnZhbCAqIHBhdHRlcm4uYmF0Y2hGaXJlTnVtO1xuICAgICAgICBwYXR0ZXJuLnRpbWVyID0gbmV3IFRpbWVyKHRoaXMuZ2FtZSwgdGhpcy5yZXNldENvb2xkb3duLmJpbmQodGhpcywgaWR4KSwgKHBhdHRlcm4uY29vbGRvd24gKyBiYXRjaENvb2xkb3duT2Zmc2V0KSk7XG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIC8vIHByb2plY3RpbGVTb3VuZCBpcyBhIHN0cmluZyBvZiBlaXRoZXIgJ3BsYXllclByb2plY3RpbGUnLCAnYm9zc1Byb2plY3RpbGUnLCBvciAnZW5lbXlQcm9qZWN0aWxlJ1xuICBwbGF5U2hvb3RTb3VuZChwcm9qZWN0aWxlU291bmQpIHtcbiAgICB0aGlzLmdhbWUuc291bmRzLmFkZChwcm9qZWN0aWxlU291bmQpO1xuICB9XG5cbiAgLy8gdGFrZXMgaW4gYW4gaW5kZXggZm9yIHRoZSBzaG9vdGluZyBwYXR0ZXJucyBhcnJheVxuICByZXNldENvb2xkb3duKGluZGV4KSB7XG4gICAgdGhpcy5wYXR0ZXJuQXJnc1tpbmRleF0ub25Db29sZG93biA9IGZhbHNlO1xuICAgIHRoaXMucGF0dGVybkFyZ3NbaW5kZXhdLnRpbWVyID0gbnVsbDtcbiAgfVxuXG4gIGRhbWFnZVRha2VuKGRhbWFnZSkge1xuICAgIHRoaXMuaGVhbHRoIC09IGRhbWFnZTtcbiAgICBpZiAodGhpcy5oZWFsdGggPD0gMCkgdGhpcy5yZW1vdmUoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTaGlwOyJdLCJuYW1lcyI6WyJNb3ZpbmdPYmplY3QiLCJQcm9qZWN0aWxlIiwiVGltZXIiLCJTaGlwIiwiY29uc3RydWN0b3IiLCJvYmpBcmdzIiwicHJvamVjdGlsZUFyZ3MiLCJwYXR0ZXJuQXJncyIsInNob290UHJvamVjdGlsZSIsImZvckVhY2giLCJwYXR0ZXJuIiwiaWR4Iiwib25Db29sZG93biIsImluQm91bmRzIiwicG9zaXRpb24iLCJpIiwiYmF0Y2hGaXJlTnVtIiwiZ2FtZSIsImhlYWx0aCIsInBvc2l0aW9uRGVsdGFzIiwiZGVsdGEiLCJ4IiwieSIsImR4IiwiZHkiLCJzdGFydFBvc2l0aW9uIiwicHJvakFyZ3MiLCJwcm9qZWN0aWxlQXJnSW5kZXgiLCJiYXRjaEZpcmVJbnRlcnZhbCIsInByb2pTb3VuZCIsInByb2plY3RpbGVTb3VuZCIsInBsYXlTaG9vdFNvdW5kIiwiYmF0Y2hDb29sZG93bk9mZnNldCIsInRpbWVyIiwicmVzZXRDb29sZG93biIsImJpbmQiLCJjb29sZG93biIsInNvdW5kcyIsImFkZCIsImluZGV4IiwiZGFtYWdlVGFrZW4iLCJkYW1hZ2UiLCJyZW1vdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/ship.js\n");

/***/ }),

/***/ "./src/scripts/sound.js":
/*!******************************!*\
  !*** ./src/scripts/sound.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// Sound class creates and handles all game sounds\n\nclass Sound {\n  constructor(game) {\n    this.game = game;\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    this.audioCtx = new AudioContext();\n    const soundUrls = {\n      // background musics\n      waveBGM: \"src/assets/sounds/wave_bgm.mp3\",\n      bossIncomingBGM: \"src/assets/sounds/boss_incoming_bgm.mp3\",\n      bossBGM: \"src/assets/sounds/boss_bgm.mp3\",\n      // major sounds\n      playerDeath: \"src/assets/sounds/player_death.wav\",\n      bossDeath: \"src/assets/sounds/boss_death.mp3\",\n      win: \"src/assets/sounds/win.mp3\",\n      gameOver: \"src/assets/sounds/game_over.mp3\",\n      // normal sounds\n      playerHurt: \"src/assets/sounds/player_hurt.wav\",\n      defaultProjectile: \"src/assets/sounds/default_laser.wav\",\n      playerProjectile: \"src/assets/sounds/player_laser.wav\",\n      enemyProjectile: \"src/assets/sounds/enemy_laser.wav\",\n      bossProjectile: \"src/assets/sounds/boss_projectile.wav\",\n      explosion: \"src/assets/sounds/explosion.wav\"\n    };\n\n    // create audio buffers from each sound file and save as a Sound class property\n    (async () => {\n      for (const key in soundUrls) {\n        const url = soundUrls[key];\n        const response = await fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        const audioBuffer = await this.audioCtx.decodeAudioData(arrayBuffer);\n        this[key] = audioBuffer;\n      }\n    })();\n    this.currentBGM = \"waveBGM\";\n    this.bgm = null;\n    this.bgmPlaying = false;\n    this.soundId = 0;\n    this.currentSounds = {};\n    this.toggle = false;\n  }\n\n  // switching the background music, and play on loop\n  // also used to play same background music again after stopping\n  switchBGM(key) {\n    this.currentBGM = key;\n    if (!this.toggle) return;\n    this.stopBGM();\n    this.bgm = this.audioCtx.createBufferSource();\n    this.bgm.buffer = this[key];\n    this.bgm.connect(this.audioCtx.destination);\n    this.bgm.loop = true;\n    this.bgm.start(0);\n    this.bgmPlaying = true;\n  }\n  stopBGM() {\n    if (!this.bgmPlaying) return;\n    this.bgm.stop();\n    // this.bgm.disconnect(this.audioCtx.destination);\n    this.bgm = null;\n    this.bgmPlaying = false;\n  }\n\n  // major sounds will stop background music before playing\n  playMajorSound(key) {\n    if (!this.toggle) return;\n    this.stopBGM();\n    this.add(key);\n  }\n\n  // all currently playing normal sounds are kept track of with ids in this.currentSounds\n  // deletes itself from this.currentSounds after finished playing\n  // to be called in other classes as needed\n  add(key) {\n    if (!this.toggle) return;\n    const newAudio = this.audioCtx.createBufferSource();\n    newAudio.buffer = this[key];\n    const newAudioVolume = this.audioCtx.createGain();\n    newAudio.connect(newAudioVolume).connect(this.audioCtx.destination);\n    if (key === \"enemyProjectile\") newAudioVolume.gain.value = 0.04;else if (key === \"playerDeath\") newAudioVolume.gain.value = 0.2;else if (key === \"win\") newAudioVolume.gain.value = 0.3;else newAudioVolume.gain.value = 1.0;\n    const id = this.soundId++;\n    const audioObject = {\n      audio: newAudio,\n      volume: newAudioVolume\n    };\n    this.currentSounds[id] = audioObject;\n    newAudio.onended = () => {\n      if (this.currentSounds[id]) {\n        // newAudioVolume.disconnect(this.audioCtx.destination);\n        delete this.currentSounds[id];\n      }\n    };\n    newAudio.start(0);\n  }\n  clearCurrentSounds() {\n    for (const id in this.currentSounds) {\n      const soundObject = this.currentSounds[id];\n      soundObject.audio.stop();\n      // soundObject.volume.disconnect(this.audioCtx.destination);\n      soundObject.audio = null;\n      soundObject.volume = null;\n      delete this.currentSounds[id];\n    }\n  }\n\n  // sound toggling\n  toggleOff() {\n    if (this.audioCtx.state !== \"suspended\") this.audioCtx.suspend();\n    this.toggle = false;\n    this.stopBGM();\n    this.clearCurrentSounds();\n  }\n  toggleOn() {\n    if (this.audioCtx.state === \"suspended\") this.audioCtx.resume();\n    this.toggle = true;\n    if (!this.game.startScreen && !this.game.gameOver && !this.game.win) {\n      this.switchBGM(this.currentBGM);\n    }\n  }\n  reset() {\n    this.switchBGM(\"waveBGM\");\n    this.clearCurrentSounds();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sound);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sound.js\n");

/***/ }),

/***/ "./src/scripts/timer.js":
/*!******************************!*\
  !*** ./src/scripts/timer.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// Timer class wraps setTimeouts with added pause and resume functionality\n\nclass Timer {\n  // callback function to be called after the delay expires\n  // delay is in milliseconds\n  constructor(game, callback, delay) {\n    // all Timers are kept tracked of in Game.timers\n    this.game = game;\n    this.id = this.game.idCounter++;\n    this.game.timers[this.id] = this;\n\n    //  Timers will also delete themselves after the callback is played\n    this.timerCallback = () => {\n      callback();\n      delete this.game.timers[this.id];\n    };\n    this.startTime = Date.now();\n    this.delay = delay;\n    this.timeoutId = setTimeout(this.timerCallback.bind(this), this.delay);\n  }\n\n  // pause and resume simply clear and create setTimeouts with new remaining delays\n  pause() {\n    clearTimeout(this.timeoutId);\n    this.delay -= Date.now() - this.startTime;\n  }\n  resume() {\n    this.startTime = Date.now();\n    this.timeoutId = setTimeout(this.timerCallback.bind(this), this.delay);\n  }\n  clear() {\n    clearTimeout(this.timeoutId);\n    delete this.game.timers[this.id];\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Timer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aW1lci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7O0FBRUEsTUFBTUEsS0FBSyxDQUFDO0VBQ1Y7RUFDQTtFQUNBQyxXQUFXQSxDQUFDQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsS0FBSyxFQUFFO0lBQ2pDO0lBQ0EsSUFBSSxDQUFDRixJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDRyxFQUFFLEdBQUcsSUFBSSxDQUFDSCxJQUFJLENBQUNJLFNBQVMsRUFBRTtJQUMvQixJQUFJLENBQUNKLElBQUksQ0FBQ0ssTUFBTSxDQUFDLElBQUksQ0FBQ0YsRUFBRSxDQUFDLEdBQUcsSUFBSTs7SUFFaEM7SUFDQSxJQUFJLENBQUNHLGFBQWEsR0FBRyxNQUFNO01BQ3pCTCxRQUFRLEVBQUU7TUFDVixPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDSyxNQUFNLENBQUMsSUFBSSxDQUFDRixFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQUksQ0FBQ0ksU0FBUyxHQUFHQyxJQUFJLENBQUNDLEdBQUcsRUFBRTtJQUMzQixJQUFJLENBQUNQLEtBQUssR0FBR0EsS0FBSztJQUNsQixJQUFJLENBQUNRLFNBQVMsR0FBR0MsVUFBVSxDQUFDLElBQUksQ0FBQ0wsYUFBYSxDQUFDTSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDVixLQUFLLENBQUM7RUFDeEU7O0VBRUE7RUFDQVcsS0FBS0EsQ0FBQSxFQUFHO0lBQ05DLFlBQVksQ0FBQyxJQUFJLENBQUNKLFNBQVMsQ0FBQztJQUM1QixJQUFJLENBQUNSLEtBQUssSUFBSU0sSUFBSSxDQUFDQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUNGLFNBQVM7RUFDM0M7RUFFQVEsTUFBTUEsQ0FBQSxFQUFHO0lBQ1AsSUFBSSxDQUFDUixTQUFTLEdBQUdDLElBQUksQ0FBQ0MsR0FBRyxFQUFFO0lBQzNCLElBQUksQ0FBQ0MsU0FBUyxHQUFHQyxVQUFVLENBQUMsSUFBSSxDQUFDTCxhQUFhLENBQUNNLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUNWLEtBQUssQ0FBQztFQUN4RTtFQUVBYyxLQUFLQSxDQUFBLEVBQUc7SUFDTkYsWUFBWSxDQUFDLElBQUksQ0FBQ0osU0FBUyxDQUFDO0lBQzVCLE9BQU8sSUFBSSxDQUFDVixJQUFJLENBQUNLLE1BQU0sQ0FBQyxJQUFJLENBQUNGLEVBQUUsQ0FBQztFQUNsQztBQUNGO0FBRUEsK0RBQWVMLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvc2NyaXB0cy90aW1lci5qcz8xNWE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRpbWVyIGNsYXNzIHdyYXBzIHNldFRpbWVvdXRzIHdpdGggYWRkZWQgcGF1c2UgYW5kIHJlc3VtZSBmdW5jdGlvbmFsaXR5XG5cbmNsYXNzIFRpbWVyIHtcbiAgLy8gY2FsbGJhY2sgZnVuY3Rpb24gdG8gYmUgY2FsbGVkIGFmdGVyIHRoZSBkZWxheSBleHBpcmVzXG4gIC8vIGRlbGF5IGlzIGluIG1pbGxpc2Vjb25kc1xuICBjb25zdHJ1Y3RvcihnYW1lLCBjYWxsYmFjaywgZGVsYXkpIHtcbiAgICAvLyBhbGwgVGltZXJzIGFyZSBrZXB0IHRyYWNrZWQgb2YgaW4gR2FtZS50aW1lcnNcbiAgICB0aGlzLmdhbWUgPSBnYW1lO1xuICAgIHRoaXMuaWQgPSB0aGlzLmdhbWUuaWRDb3VudGVyKys7XG4gICAgdGhpcy5nYW1lLnRpbWVyc1t0aGlzLmlkXSA9IHRoaXM7XG5cbiAgICAvLyAgVGltZXJzIHdpbGwgYWxzbyBkZWxldGUgdGhlbXNlbHZlcyBhZnRlciB0aGUgY2FsbGJhY2sgaXMgcGxheWVkXG4gICAgdGhpcy50aW1lckNhbGxiYWNrID0gKCkgPT4ge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICAgIGRlbGV0ZSB0aGlzLmdhbWUudGltZXJzW3RoaXMuaWRdO1xuICAgIH1cblxuICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB0aGlzLmRlbGF5ID0gZGVsYXk7XG4gICAgdGhpcy50aW1lb3V0SWQgPSBzZXRUaW1lb3V0KHRoaXMudGltZXJDYWxsYmFjay5iaW5kKHRoaXMpLCB0aGlzLmRlbGF5KTtcbiAgfVxuXG4gIC8vIHBhdXNlIGFuZCByZXN1bWUgc2ltcGx5IGNsZWFyIGFuZCBjcmVhdGUgc2V0VGltZW91dHMgd2l0aCBuZXcgcmVtYWluaW5nIGRlbGF5c1xuICBwYXVzZSgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWQpO1xuICAgIHRoaXMuZGVsYXkgLT0gRGF0ZS5ub3coKSAtIHRoaXMuc3RhcnRUaW1lO1xuICB9XG5cbiAgcmVzdW1lKCkge1xuICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB0aGlzLnRpbWVvdXRJZCA9IHNldFRpbWVvdXQodGhpcy50aW1lckNhbGxiYWNrLmJpbmQodGhpcyksIHRoaXMuZGVsYXkpXG4gIH1cblxuICBjbGVhcigpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWQpO1xuICAgIGRlbGV0ZSB0aGlzLmdhbWUudGltZXJzW3RoaXMuaWRdO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRpbWVyOyJdLCJuYW1lcyI6WyJUaW1lciIsImNvbnN0cnVjdG9yIiwiZ2FtZSIsImNhbGxiYWNrIiwiZGVsYXkiLCJpZCIsImlkQ291bnRlciIsInRpbWVycyIsInRpbWVyQ2FsbGJhY2siLCJzdGFydFRpbWUiLCJEYXRlIiwibm93IiwidGltZW91dElkIiwic2V0VGltZW91dCIsImJpbmQiLCJwYXVzZSIsImNsZWFyVGltZW91dCIsInJlc3VtZSIsImNsZWFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/timer.js\n");

/***/ }),

/***/ "./src/scripts/utils.js":
/*!******************************!*\
  !*** ./src/scripts/utils.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rectangleCollision\": function() { return /* binding */ rectangleCollision; },\n/* harmony export */   \"vectorScale\": function() { return /* binding */ vectorScale; }\n/* harmony export */ });\n// vector and collision math related helper functions go here\n\n// rectangle to rectangle collision \n// takes in 2 box objects that have x/y positions, width, and height\nfunction rectangleCollision(box1, box2) {\n  return box1.x < box2.x + box2.width && box1.x + box1.width > box2.x && box1.y < box2.y + box2.height && box1.height + box1.y > box2.y;\n}\n\n// angled rectangle collision (seperate axis theorem)\n\n// rectangle to circle collision\n\n// circle to circle collision\n\n// vector scaling calculation\nfunction vectorScale(vector, newMagnitude) {\n  const magnitude = Math.sqrt(vector[0] ** 2 + vector[1] ** 2);\n  const scale = newMagnitude / magnitude;\n  return [vector[0] * scale, vector[1] * scale];\n}\n\n// vector calculation between two points\n\n// new angle calculation//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91dGlscy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUVBO0FBQ0E7QUFDTyxTQUFTQSxrQkFBa0JBLENBQUNDLElBQUksRUFBRUMsSUFBSSxFQUFFO0VBQzdDLE9BQ0VELElBQUksQ0FBQ0UsQ0FBQyxHQUFHRCxJQUFJLENBQUNDLENBQUMsR0FBR0QsSUFBSSxDQUFDRSxLQUFLLElBQzVCSCxJQUFJLENBQUNFLENBQUMsR0FBR0YsSUFBSSxDQUFDRyxLQUFLLEdBQUdGLElBQUksQ0FBQ0MsQ0FBQyxJQUM1QkYsSUFBSSxDQUFDSSxDQUFDLEdBQUdILElBQUksQ0FBQ0csQ0FBQyxHQUFHSCxJQUFJLENBQUNJLE1BQU0sSUFDN0JMLElBQUksQ0FBQ0ssTUFBTSxHQUFHTCxJQUFJLENBQUNJLENBQUMsR0FBR0gsSUFBSSxDQUFDRyxDQUFDO0FBRWpDOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ08sU0FBU0UsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxZQUFZLEVBQUU7RUFDaEQsTUFBTUMsU0FBUyxHQUFHQyxJQUFJLENBQUNDLElBQUksQ0FBQ0osTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsR0FBR0EsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsQ0FBQztFQUN4RCxNQUFNSyxLQUFLLEdBQUdKLFlBQVksR0FBQ0MsU0FBUztFQUNwQyxPQUFPLENBQUNGLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBR0ssS0FBSyxFQUFFTCxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUdLLEtBQUssQ0FBQztBQUMvQzs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL3V0aWxzLmpzP2RiMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdmVjdG9yIGFuZCBjb2xsaXNpb24gbWF0aCByZWxhdGVkIGhlbHBlciBmdW5jdGlvbnMgZ28gaGVyZVxuXG4vLyByZWN0YW5nbGUgdG8gcmVjdGFuZ2xlIGNvbGxpc2lvbiBcbi8vIHRha2VzIGluIDIgYm94IG9iamVjdHMgdGhhdCBoYXZlIHgveSBwb3NpdGlvbnMsIHdpZHRoLCBhbmQgaGVpZ2h0XG5leHBvcnQgZnVuY3Rpb24gcmVjdGFuZ2xlQ29sbGlzaW9uKGJveDEsIGJveDIpIHtcbiAgcmV0dXJuIChcbiAgICBib3gxLnggPCBib3gyLnggKyBib3gyLndpZHRoICYmXG4gICAgYm94MS54ICsgYm94MS53aWR0aCA+IGJveDIueCAmJlxuICAgIGJveDEueSA8IGJveDIueSArIGJveDIuaGVpZ2h0ICYmXG4gICAgYm94MS5oZWlnaHQgKyBib3gxLnkgPiBib3gyLnlcbiAgKVxufVxuXG4vLyBhbmdsZWQgcmVjdGFuZ2xlIGNvbGxpc2lvbiAoc2VwZXJhdGUgYXhpcyB0aGVvcmVtKVxuXG4vLyByZWN0YW5nbGUgdG8gY2lyY2xlIGNvbGxpc2lvblxuXG4vLyBjaXJjbGUgdG8gY2lyY2xlIGNvbGxpc2lvblxuXG4vLyB2ZWN0b3Igc2NhbGluZyBjYWxjdWxhdGlvblxuZXhwb3J0IGZ1bmN0aW9uIHZlY3RvclNjYWxlKHZlY3RvciwgbmV3TWFnbml0dWRlKSB7XG4gIGNvbnN0IG1hZ25pdHVkZSA9IE1hdGguc3FydCh2ZWN0b3JbMF0qKjIgKyB2ZWN0b3JbMV0qKjIpO1xuICBjb25zdCBzY2FsZSA9IG5ld01hZ25pdHVkZS9tYWduaXR1ZGU7XG4gIHJldHVybiBbdmVjdG9yWzBdICogc2NhbGUsIHZlY3RvclsxXSAqIHNjYWxlXVxufVxuXG4vLyB2ZWN0b3IgY2FsY3VsYXRpb24gYmV0d2VlbiB0d28gcG9pbnRzXG5cbi8vIG5ldyBhbmdsZSBjYWxjdWxhdGlvbiJdLCJuYW1lcyI6WyJyZWN0YW5nbGVDb2xsaXNpb24iLCJib3gxIiwiYm94MiIsIngiLCJ3aWR0aCIsInkiLCJoZWlnaHQiLCJ2ZWN0b3JTY2FsZSIsInZlY3RvciIsIm5ld01hZ25pdHVkZSIsIm1hZ25pdHVkZSIsIk1hdGgiLCJzcXJ0Iiwic2NhbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/utils.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;